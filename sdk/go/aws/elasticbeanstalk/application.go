// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticbeanstalk

import (
	"context"
	"reflect"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an Elastic Beanstalk Application Resource. Elastic Beanstalk allows
// you to deploy and manage applications in the AWS cloud without worrying about
// the infrastructure that runs those applications.
// 
// This resource creates an application that has one configuration template named
// `default`, and no application versions
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/elastic_beanstalk_application.html.markdown.
type Application struct {
	pulumi.CustomResourceState

	AppversionLifecycle ApplicationAppversionLifecycleOutput `pulumi:"appversionLifecycle"`

	// The ARN assigned by AWS for this Elastic Beanstalk Application.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// Short description of the application
	Description pulumi.StringOutput `pulumi:"description"`

	// The name of the application, must be unique within your account
	Name pulumi.StringOutput `pulumi:"name"`

	// Key-value mapping of tags for the Elastic Beanstalk Application.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.AppversionLifecycle; i != nil { inputs["appversionLifecycle"] = i.ToApplicationAppversionLifecycleOutput() }
		if i := args.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource Application
	err := ctx.RegisterResource("aws:elasticbeanstalk/application:Application", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.AppversionLifecycle; i != nil { inputs["appversionLifecycle"] = i.ToApplicationAppversionLifecycleOutput() }
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource Application
	err := ctx.ReadResource("aws:elasticbeanstalk/application:Application", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type ApplicationState struct {
	AppversionLifecycle ApplicationAppversionLifecycleInput `pulumi:"appversionLifecycle"`
	// The ARN assigned by AWS for this Elastic Beanstalk Application.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Short description of the application
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the application, must be unique within your account
	Name pulumi.StringInput `pulumi:"name"`
	// Key-value mapping of tags for the Elastic Beanstalk Application.
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	AppversionLifecycle ApplicationAppversionLifecycleInput `pulumi:"appversionLifecycle"`
	// Short description of the application
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the application, must be unique within your account
	Name pulumi.StringInput `pulumi:"name"`
	// Key-value mapping of tags for the Elastic Beanstalk Application.
	Tags pulumi.MapInput `pulumi:"tags"`
}
type ApplicationAppversionLifecycle struct {
	// Set to `true` to delete a version's source bundle from S3 when the application version is deleted.
	DeleteSourceFromS3 *bool `pulumi:"deleteSourceFromS3"`
	// The number of days to retain an application version.
	MaxAgeInDays *int `pulumi:"maxAgeInDays"`
	// The maximum number of application versions to retain.
	MaxCount *int `pulumi:"maxCount"`
	// The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
	ServiceRole string `pulumi:"serviceRole"`
}
var applicationAppversionLifecycleType = reflect.TypeOf((*ApplicationAppversionLifecycle)(nil)).Elem()

type ApplicationAppversionLifecycleInput interface {
	pulumi.Input

	ToApplicationAppversionLifecycleOutput() ApplicationAppversionLifecycleOutput
	ToApplicationAppversionLifecycleOutputWithContext(ctx context.Context) ApplicationAppversionLifecycleOutput
}

type ApplicationAppversionLifecycleArgs struct {
	// Set to `true` to delete a version's source bundle from S3 when the application version is deleted.
	DeleteSourceFromS3 pulumi.BoolInput `pulumi:"deleteSourceFromS3"`
	// The number of days to retain an application version.
	MaxAgeInDays pulumi.IntInput `pulumi:"maxAgeInDays"`
	// The maximum number of application versions to retain.
	MaxCount pulumi.IntInput `pulumi:"maxCount"`
	// The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
	ServiceRole pulumi.StringInput `pulumi:"serviceRole"`
}

func (ApplicationAppversionLifecycleArgs) ElementType() reflect.Type {
	return applicationAppversionLifecycleType
}

func (a ApplicationAppversionLifecycleArgs) ToApplicationAppversionLifecycleOutput() ApplicationAppversionLifecycleOutput {
	return pulumi.ToOutput(a).(ApplicationAppversionLifecycleOutput)
}

func (a ApplicationAppversionLifecycleArgs) ToApplicationAppversionLifecycleOutputWithContext(ctx context.Context) ApplicationAppversionLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ApplicationAppversionLifecycleOutput)
}

type ApplicationAppversionLifecycleOutput struct { *pulumi.OutputState }

// Set to `true` to delete a version's source bundle from S3 when the application version is deleted.
func (o ApplicationAppversionLifecycleOutput) DeleteSourceFromS3() pulumi.BoolOutput {
	return o.Apply(func(v ApplicationAppversionLifecycle) bool {
		if v.DeleteSourceFromS3 == nil { return *new(bool) } else { return *v.DeleteSourceFromS3 }
	}).(pulumi.BoolOutput)
}

// The number of days to retain an application version.
func (o ApplicationAppversionLifecycleOutput) MaxAgeInDays() pulumi.IntOutput {
	return o.Apply(func(v ApplicationAppversionLifecycle) int {
		if v.MaxAgeInDays == nil { return *new(int) } else { return *v.MaxAgeInDays }
	}).(pulumi.IntOutput)
}

// The maximum number of application versions to retain.
func (o ApplicationAppversionLifecycleOutput) MaxCount() pulumi.IntOutput {
	return o.Apply(func(v ApplicationAppversionLifecycle) int {
		if v.MaxCount == nil { return *new(int) } else { return *v.MaxCount }
	}).(pulumi.IntOutput)
}

// The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
func (o ApplicationAppversionLifecycleOutput) ServiceRole() pulumi.StringOutput {
	return o.Apply(func(v ApplicationAppversionLifecycle) string {
		return v.ServiceRole
	}).(pulumi.StringOutput)
}

func (ApplicationAppversionLifecycleOutput) ElementType() reflect.Type {
	return applicationAppversionLifecycleType
}

func (o ApplicationAppversionLifecycleOutput) ToApplicationAppversionLifecycleOutput() ApplicationAppversionLifecycleOutput {
	return o
}

func (o ApplicationAppversionLifecycleOutput) ToApplicationAppversionLifecycleOutputWithContext(ctx context.Context) ApplicationAppversionLifecycleOutput {
	return o
}

func init() { pulumi.RegisterOutputType(ApplicationAppversionLifecycleOutput{}) }

