// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package docdb

import (
	"context"
	"reflect"
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a DocumentDB Cluster Parameter Group
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/docdb_cluster_parameter_group.html.markdown.
type ClusterParameterGroup struct {
	pulumi.CustomResourceState

	// The ARN of the documentDB cluster parameter group.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The description of the documentDB cluster parameter group. Defaults to "Managed by Pulumi".
	Description pulumi.StringOutput `pulumi:"description"`

	// The family of the documentDB cluster parameter group.
	Family pulumi.StringOutput `pulumi:"family"`

	// The name of the documentDB parameter.
	Name pulumi.StringOutput `pulumi:"name"`

	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumi.StringOutput `pulumi:"namePrefix"`

	// A list of documentDB parameters to apply.
	Parameters ClusterParameterGroupParametersArrayOutput `pulumi:"parameters"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewClusterParameterGroup registers a new resource with the given unique name, arguments, and options.
func NewClusterParameterGroup(ctx *pulumi.Context,
	name string, args *ClusterParameterGroupArgs, opts ...pulumi.ResourceOption) (*ClusterParameterGroup, error) {
	if args == nil || args.Family == nil {
		return nil, errors.New("missing required argument 'Family'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := args.Family; i != nil { inputs["family"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.NamePrefix; i != nil { inputs["namePrefix"] = i.ToStringOutput() }
		if i := args.Parameters; i != nil { inputs["parameters"] = i.ToClusterParameterGroupParametersArrayOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource ClusterParameterGroup
	err := ctx.RegisterResource("aws:docdb/clusterParameterGroup:ClusterParameterGroup", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterParameterGroup gets an existing ClusterParameterGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterParameterGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterParameterGroupState, opts ...pulumi.ResourceOption) (*ClusterParameterGroup, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := state.Family; i != nil { inputs["family"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.NamePrefix; i != nil { inputs["namePrefix"] = i.ToStringOutput() }
		if i := state.Parameters; i != nil { inputs["parameters"] = i.ToClusterParameterGroupParametersArrayOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource ClusterParameterGroup
	err := ctx.ReadResource("aws:docdb/clusterParameterGroup:ClusterParameterGroup", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterParameterGroup resources.
type ClusterParameterGroupState struct {
	// The ARN of the documentDB cluster parameter group.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The description of the documentDB cluster parameter group. Defaults to "Managed by Pulumi".
	Description pulumi.StringInput `pulumi:"description"`
	// The family of the documentDB cluster parameter group.
	Family pulumi.StringInput `pulumi:"family"`
	// The name of the documentDB parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// A list of documentDB parameters to apply.
	Parameters ClusterParameterGroupParametersArrayInput `pulumi:"parameters"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a ClusterParameterGroup resource.
type ClusterParameterGroupArgs struct {
	// The description of the documentDB cluster parameter group. Defaults to "Managed by Pulumi".
	Description pulumi.StringInput `pulumi:"description"`
	// The family of the documentDB cluster parameter group.
	Family pulumi.StringInput `pulumi:"family"`
	// The name of the documentDB parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// A list of documentDB parameters to apply.
	Parameters ClusterParameterGroupParametersArrayInput `pulumi:"parameters"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}
type ClusterParameterGroupParameters struct {
	// Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
	ApplyMethod *string `pulumi:"applyMethod"`
	// The name of the documentDB parameter.
	Name string `pulumi:"name"`
	// The value of the documentDB parameter.
	Value string `pulumi:"value"`
}
var clusterParameterGroupParametersType = reflect.TypeOf((*ClusterParameterGroupParameters)(nil)).Elem()

type ClusterParameterGroupParametersInput interface {
	pulumi.Input

	ToClusterParameterGroupParametersOutput() ClusterParameterGroupParametersOutput
	ToClusterParameterGroupParametersOutputWithContext(ctx context.Context) ClusterParameterGroupParametersOutput
}

type ClusterParameterGroupParametersArgs struct {
	// Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
	ApplyMethod pulumi.StringInput `pulumi:"applyMethod"`
	// The name of the documentDB parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the documentDB parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterParameterGroupParametersArgs) ElementType() reflect.Type {
	return clusterParameterGroupParametersType
}

func (a ClusterParameterGroupParametersArgs) ToClusterParameterGroupParametersOutput() ClusterParameterGroupParametersOutput {
	return pulumi.ToOutput(a).(ClusterParameterGroupParametersOutput)
}

func (a ClusterParameterGroupParametersArgs) ToClusterParameterGroupParametersOutputWithContext(ctx context.Context) ClusterParameterGroupParametersOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ClusterParameterGroupParametersOutput)
}

type ClusterParameterGroupParametersOutput struct { *pulumi.OutputState }

// Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
func (o ClusterParameterGroupParametersOutput) ApplyMethod() pulumi.StringOutput {
	return o.Apply(func(v ClusterParameterGroupParameters) string {
		if v.ApplyMethod == nil { return *new(string) } else { return *v.ApplyMethod }
	}).(pulumi.StringOutput)
}

// The name of the documentDB parameter.
func (o ClusterParameterGroupParametersOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v ClusterParameterGroupParameters) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// The value of the documentDB parameter.
func (o ClusterParameterGroupParametersOutput) Value() pulumi.StringOutput {
	return o.Apply(func(v ClusterParameterGroupParameters) string {
		return v.Value
	}).(pulumi.StringOutput)
}

func (ClusterParameterGroupParametersOutput) ElementType() reflect.Type {
	return clusterParameterGroupParametersType
}

func (o ClusterParameterGroupParametersOutput) ToClusterParameterGroupParametersOutput() ClusterParameterGroupParametersOutput {
	return o
}

func (o ClusterParameterGroupParametersOutput) ToClusterParameterGroupParametersOutputWithContext(ctx context.Context) ClusterParameterGroupParametersOutput {
	return o
}

func init() { pulumi.RegisterOutputType(ClusterParameterGroupParametersOutput{}) }

var clusterParameterGroupParametersArrayType = reflect.TypeOf((*[]ClusterParameterGroupParameters)(nil)).Elem()

type ClusterParameterGroupParametersArrayInput interface {
	pulumi.Input

	ToClusterParameterGroupParametersArrayOutput() ClusterParameterGroupParametersArrayOutput
	ToClusterParameterGroupParametersArrayOutputWithContext(ctx context.Context) ClusterParameterGroupParametersArrayOutput
}

type ClusterParameterGroupParametersArrayArgs []ClusterParameterGroupParametersInput

func (ClusterParameterGroupParametersArrayArgs) ElementType() reflect.Type {
	return clusterParameterGroupParametersArrayType
}

func (a ClusterParameterGroupParametersArrayArgs) ToClusterParameterGroupParametersArrayOutput() ClusterParameterGroupParametersArrayOutput {
	return pulumi.ToOutput(a).(ClusterParameterGroupParametersArrayOutput)
}

func (a ClusterParameterGroupParametersArrayArgs) ToClusterParameterGroupParametersArrayOutputWithContext(ctx context.Context) ClusterParameterGroupParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ClusterParameterGroupParametersArrayOutput)
}

type ClusterParameterGroupParametersArrayOutput struct { *pulumi.OutputState }

func (o ClusterParameterGroupParametersArrayOutput) Index(i pulumi.IntInput) ClusterParameterGroupParametersOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) ClusterParameterGroupParameters {
		return vs[0].([]ClusterParameterGroupParameters)[vs[1].(int)]
	}).(ClusterParameterGroupParametersOutput)
}

func (ClusterParameterGroupParametersArrayOutput) ElementType() reflect.Type {
	return clusterParameterGroupParametersArrayType
}

func (o ClusterParameterGroupParametersArrayOutput) ToClusterParameterGroupParametersArrayOutput() ClusterParameterGroupParametersArrayOutput {
	return o
}

func (o ClusterParameterGroupParametersArrayOutput) ToClusterParameterGroupParametersArrayOutputWithContext(ctx context.Context) ClusterParameterGroupParametersArrayOutput {
	return o
}

func init() { pulumi.RegisterOutputType(ClusterParameterGroupParametersArrayOutput{}) }

