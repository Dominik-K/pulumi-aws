// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Subscribes to a Security Hub standard.
// 
// > **NOTE:** This AWS service is in Preview and may change before General Availability release. Backwards compatibility is not guaranteed between AWS Provider releases.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/securityhub_standards_subscription.html.markdown.
type StandardsSubscription struct {
	pulumi.CustomResourceState

	// The ARN of a standard - see below.
	StandardsArn pulumi.StringOutput `pulumi:"standardsArn"`
}

// NewStandardsSubscription registers a new resource with the given unique name, arguments, and options.
func NewStandardsSubscription(ctx *pulumi.Context,
	name string, args *StandardsSubscriptionArgs, opts ...pulumi.ResourceOption) (*StandardsSubscription, error) {
	if args == nil || args.StandardsArn == nil {
		return nil, errors.New("missing required argument 'StandardsArn'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.StandardsArn; i != nil { inputs["standardsArn"] = i.ToStringOutput() }
	}
	var resource StandardsSubscription
	err := ctx.RegisterResource("aws:securityhub/standardsSubscription:StandardsSubscription", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStandardsSubscription gets an existing StandardsSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStandardsSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StandardsSubscriptionState, opts ...pulumi.ResourceOption) (*StandardsSubscription, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.StandardsArn; i != nil { inputs["standardsArn"] = i.ToStringOutput() }
	}
	var resource StandardsSubscription
	err := ctx.ReadResource("aws:securityhub/standardsSubscription:StandardsSubscription", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StandardsSubscription resources.
type StandardsSubscriptionState struct {
	// The ARN of a standard - see below.
	StandardsArn pulumi.StringInput `pulumi:"standardsArn"`
}

// The set of arguments for constructing a StandardsSubscription resource.
type StandardsSubscriptionArgs struct {
	// The ARN of a standard - see below.
	StandardsArn pulumi.StringInput `pulumi:"standardsArn"`
}
