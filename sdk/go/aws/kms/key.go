// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a KMS customer master key.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/kms_key.html.markdown.
type Key struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the key.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// Duration in days after which the key is deleted
	// after destruction of the resource, must be between 7 and 30 days. Defaults to 30 days.
	DeletionWindowInDays pulumi.IntOutput `pulumi:"deletionWindowInDays"`

	// The description of the key as viewed in AWS console.
	Description pulumi.StringOutput `pulumi:"description"`

	// Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html)
	// is enabled. Defaults to false.
	EnableKeyRotation pulumi.BoolOutput `pulumi:"enableKeyRotation"`

	// Specifies whether the key is enabled. Defaults to true.
	IsEnabled pulumi.BoolOutput `pulumi:"isEnabled"`

	// The globally unique identifier for the key.
	KeyId pulumi.StringOutput `pulumi:"keyId"`

	// Specifies the intended use of the key.
	// Defaults to ENCRYPT_DECRYPT, and only symmetric encryption and decryption are supported.
	KeyUsage pulumi.StringOutput `pulumi:"keyUsage"`

	Policy pulumi.StringOutput `pulumi:"policy"`

	// A mapping of tags to assign to the object.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewKey registers a new resource with the given unique name, arguments, and options.
func NewKey(ctx *pulumi.Context,
	name string, args *KeyArgs, opts ...pulumi.ResourceOption) (*Key, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.DeletionWindowInDays; i != nil { inputs["deletionWindowInDays"] = i.ToIntOutput() }
		if i := args.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := args.EnableKeyRotation; i != nil { inputs["enableKeyRotation"] = i.ToBoolOutput() }
		if i := args.IsEnabled; i != nil { inputs["isEnabled"] = i.ToBoolOutput() }
		if i := args.KeyUsage; i != nil { inputs["keyUsage"] = i.ToStringOutput() }
		if i := args.Policy; i != nil { inputs["policy"] = i.ToStringOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource Key
	err := ctx.RegisterResource("aws:kms/key:Key", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKey gets an existing Key resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KeyState, opts ...pulumi.ResourceOption) (*Key, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.DeletionWindowInDays; i != nil { inputs["deletionWindowInDays"] = i.ToIntOutput() }
		if i := state.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := state.EnableKeyRotation; i != nil { inputs["enableKeyRotation"] = i.ToBoolOutput() }
		if i := state.IsEnabled; i != nil { inputs["isEnabled"] = i.ToBoolOutput() }
		if i := state.KeyId; i != nil { inputs["keyId"] = i.ToStringOutput() }
		if i := state.KeyUsage; i != nil { inputs["keyUsage"] = i.ToStringOutput() }
		if i := state.Policy; i != nil { inputs["policy"] = i.ToStringOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource Key
	err := ctx.ReadResource("aws:kms/key:Key", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Key resources.
type KeyState struct {
	// The Amazon Resource Name (ARN) of the key.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Duration in days after which the key is deleted
	// after destruction of the resource, must be between 7 and 30 days. Defaults to 30 days.
	DeletionWindowInDays pulumi.IntInput `pulumi:"deletionWindowInDays"`
	// The description of the key as viewed in AWS console.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html)
	// is enabled. Defaults to false.
	EnableKeyRotation pulumi.BoolInput `pulumi:"enableKeyRotation"`
	// Specifies whether the key is enabled. Defaults to true.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The globally unique identifier for the key.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Specifies the intended use of the key.
	// Defaults to ENCRYPT_DECRYPT, and only symmetric encryption and decryption are supported.
	KeyUsage pulumi.StringInput `pulumi:"keyUsage"`
	Policy pulumi.StringInput `pulumi:"policy"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a Key resource.
type KeyArgs struct {
	// Duration in days after which the key is deleted
	// after destruction of the resource, must be between 7 and 30 days. Defaults to 30 days.
	DeletionWindowInDays pulumi.IntInput `pulumi:"deletionWindowInDays"`
	// The description of the key as viewed in AWS console.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html)
	// is enabled. Defaults to false.
	EnableKeyRotation pulumi.BoolInput `pulumi:"enableKeyRotation"`
	// Specifies whether the key is enabled. Defaults to true.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Specifies the intended use of the key.
	// Defaults to ENCRYPT_DECRYPT, and only symmetric encryption and decryption are supported.
	KeyUsage pulumi.StringInput `pulumi:"keyUsage"`
	Policy pulumi.StringInput `pulumi:"policy"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
}
