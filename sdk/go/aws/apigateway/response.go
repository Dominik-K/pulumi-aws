// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Gateway Response for a REST API Gateway.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_gateway_response.html.markdown.
type Response struct {
	pulumi.CustomResourceState

	// A map specifying the parameters (paths, query strings and headers) of the Gateway Response.
	ResponseParameters pulumi.StringMapOutput `pulumi:"responseParameters"`

	// A map specifying the templates used to transform the response body.
	ResponseTemplates pulumi.StringMapOutput `pulumi:"responseTemplates"`

	// The response type of the associated GatewayResponse.
	ResponseType pulumi.StringOutput `pulumi:"responseType"`

	// The string identifier of the associated REST API.
	RestApiId pulumi.StringOutput `pulumi:"restApiId"`

	// The HTTP status code of the Gateway Response.
	StatusCode pulumi.StringOutput `pulumi:"statusCode"`
}

// NewResponse registers a new resource with the given unique name, arguments, and options.
func NewResponse(ctx *pulumi.Context,
	name string, args *ResponseArgs, opts ...pulumi.ResourceOption) (*Response, error) {
	if args == nil || args.ResponseType == nil {
		return nil, errors.New("missing required argument 'ResponseType'")
	}
	if args == nil || args.RestApiId == nil {
		return nil, errors.New("missing required argument 'RestApiId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ResponseParameters; i != nil { inputs["responseParameters"] = i.ToStringMapOutput() }
		if i := args.ResponseTemplates; i != nil { inputs["responseTemplates"] = i.ToStringMapOutput() }
		if i := args.ResponseType; i != nil { inputs["responseType"] = i.ToStringOutput() }
		if i := args.RestApiId; i != nil { inputs["restApiId"] = i.ToStringOutput() }
		if i := args.StatusCode; i != nil { inputs["statusCode"] = i.ToStringOutput() }
	}
	var resource Response
	err := ctx.RegisterResource("aws:apigateway/response:Response", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResponse gets an existing Response resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResponse(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResponseState, opts ...pulumi.ResourceOption) (*Response, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.ResponseParameters; i != nil { inputs["responseParameters"] = i.ToStringMapOutput() }
		if i := state.ResponseTemplates; i != nil { inputs["responseTemplates"] = i.ToStringMapOutput() }
		if i := state.ResponseType; i != nil { inputs["responseType"] = i.ToStringOutput() }
		if i := state.RestApiId; i != nil { inputs["restApiId"] = i.ToStringOutput() }
		if i := state.StatusCode; i != nil { inputs["statusCode"] = i.ToStringOutput() }
	}
	var resource Response
	err := ctx.ReadResource("aws:apigateway/response:Response", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Response resources.
type ResponseState struct {
	// A map specifying the parameters (paths, query strings and headers) of the Gateway Response.
	ResponseParameters pulumi.StringMapInput `pulumi:"responseParameters"`
	// A map specifying the templates used to transform the response body.
	ResponseTemplates pulumi.StringMapInput `pulumi:"responseTemplates"`
	// The response type of the associated GatewayResponse.
	ResponseType pulumi.StringInput `pulumi:"responseType"`
	// The string identifier of the associated REST API.
	RestApiId pulumi.StringInput `pulumi:"restApiId"`
	// The HTTP status code of the Gateway Response.
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

// The set of arguments for constructing a Response resource.
type ResponseArgs struct {
	// A map specifying the parameters (paths, query strings and headers) of the Gateway Response.
	ResponseParameters pulumi.StringMapInput `pulumi:"responseParameters"`
	// A map specifying the templates used to transform the response body.
	ResponseTemplates pulumi.StringMapInput `pulumi:"responseTemplates"`
	// The response type of the associated GatewayResponse.
	ResponseType pulumi.StringInput `pulumi:"responseType"`
	// The string identifier of the associated REST API.
	RestApiId pulumi.StringInput `pulumi:"restApiId"`
	// The HTTP status code of the Gateway Response.
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}
