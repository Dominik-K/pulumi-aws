// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway REST API.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_rest_api.html.markdown.
type RestApi struct {
	pulumi.CustomResourceState

	// The source of the API key for requests. Valid values are HEADER (default) and AUTHORIZER.
	ApiKeySource pulumi.StringOutput `pulumi:"apiKeySource"`

	// Amazon Resource Name (ARN)
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The list of binary media types supported by the RestApi. By default, the RestApi supports only UTF-8-encoded text payloads.
	BinaryMediaTypes pulumi.StringArrayOutput `pulumi:"binaryMediaTypes"`

	// An OpenAPI specification that defines the set of routes and integrations to create as part of the REST API.
	Body pulumi.StringOutput `pulumi:"body"`

	// The creation date of the REST API
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`

	// The description of the REST API
	Description pulumi.StringOutput `pulumi:"description"`

	// Nested argument defining API endpoint configuration including endpoint type. Defined below.
	EndpointConfiguration RestApiEndpointConfigurationOutput `pulumi:"endpointConfiguration"`

	// The execution ARN part to be used in [`lambdaPermission`](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html)'s `sourceArn`
	// when allowing API Gateway to invoke a Lambda function,
	// e.g. `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j`, which can be concatenated with allowed stage, method and resource path.
	ExecutionArn pulumi.StringOutput `pulumi:"executionArn"`

	// Minimum response size to compress for the REST API. Integer between -1 and 10485760 (10MB). Setting a value greater than -1 will enable compression, -1 disables compression (default).
	MinimumCompressionSize pulumi.IntOutput `pulumi:"minimumCompressionSize"`

	// The name of the REST API
	Name pulumi.StringOutput `pulumi:"name"`

	Policy pulumi.StringOutput `pulumi:"policy"`

	// The resource ID of the REST API's root
	RootResourceId pulumi.StringOutput `pulumi:"rootResourceId"`

	// Key-value mapping of resource tags
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewRestApi registers a new resource with the given unique name, arguments, and options.
func NewRestApi(ctx *pulumi.Context,
	name string, args *RestApiArgs, opts ...pulumi.ResourceOption) (*RestApi, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ApiKeySource; i != nil { inputs["apiKeySource"] = i.ToStringOutput() }
		if i := args.BinaryMediaTypes; i != nil { inputs["binaryMediaTypes"] = i.ToStringArrayOutput() }
		if i := args.Body; i != nil { inputs["body"] = i.ToStringOutput() }
		if i := args.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := args.EndpointConfiguration; i != nil { inputs["endpointConfiguration"] = i.ToRestApiEndpointConfigurationOutput() }
		if i := args.MinimumCompressionSize; i != nil { inputs["minimumCompressionSize"] = i.ToIntOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.Policy; i != nil { inputs["policy"] = i.ToStringOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource RestApi
	err := ctx.RegisterResource("aws:apigateway/restApi:RestApi", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestApi gets an existing RestApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestApiState, opts ...pulumi.ResourceOption) (*RestApi, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.ApiKeySource; i != nil { inputs["apiKeySource"] = i.ToStringOutput() }
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.BinaryMediaTypes; i != nil { inputs["binaryMediaTypes"] = i.ToStringArrayOutput() }
		if i := state.Body; i != nil { inputs["body"] = i.ToStringOutput() }
		if i := state.CreatedDate; i != nil { inputs["createdDate"] = i.ToStringOutput() }
		if i := state.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := state.EndpointConfiguration; i != nil { inputs["endpointConfiguration"] = i.ToRestApiEndpointConfigurationOutput() }
		if i := state.ExecutionArn; i != nil { inputs["executionArn"] = i.ToStringOutput() }
		if i := state.MinimumCompressionSize; i != nil { inputs["minimumCompressionSize"] = i.ToIntOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.Policy; i != nil { inputs["policy"] = i.ToStringOutput() }
		if i := state.RootResourceId; i != nil { inputs["rootResourceId"] = i.ToStringOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource RestApi
	err := ctx.ReadResource("aws:apigateway/restApi:RestApi", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestApi resources.
type RestApiState struct {
	// The source of the API key for requests. Valid values are HEADER (default) and AUTHORIZER.
	ApiKeySource pulumi.StringInput `pulumi:"apiKeySource"`
	// Amazon Resource Name (ARN)
	Arn pulumi.StringInput `pulumi:"arn"`
	// The list of binary media types supported by the RestApi. By default, the RestApi supports only UTF-8-encoded text payloads.
	BinaryMediaTypes pulumi.StringArrayInput `pulumi:"binaryMediaTypes"`
	// An OpenAPI specification that defines the set of routes and integrations to create as part of the REST API.
	Body pulumi.StringInput `pulumi:"body"`
	// The creation date of the REST API
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The description of the REST API
	Description pulumi.StringInput `pulumi:"description"`
	// Nested argument defining API endpoint configuration including endpoint type. Defined below.
	EndpointConfiguration RestApiEndpointConfigurationInput `pulumi:"endpointConfiguration"`
	// The execution ARN part to be used in [`lambdaPermission`](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html)'s `sourceArn`
	// when allowing API Gateway to invoke a Lambda function,
	// e.g. `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j`, which can be concatenated with allowed stage, method and resource path.
	ExecutionArn pulumi.StringInput `pulumi:"executionArn"`
	// Minimum response size to compress for the REST API. Integer between -1 and 10485760 (10MB). Setting a value greater than -1 will enable compression, -1 disables compression (default).
	MinimumCompressionSize pulumi.IntInput `pulumi:"minimumCompressionSize"`
	// The name of the REST API
	Name pulumi.StringInput `pulumi:"name"`
	Policy pulumi.StringInput `pulumi:"policy"`
	// The resource ID of the REST API's root
	RootResourceId pulumi.StringInput `pulumi:"rootResourceId"`
	// Key-value mapping of resource tags
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a RestApi resource.
type RestApiArgs struct {
	// The source of the API key for requests. Valid values are HEADER (default) and AUTHORIZER.
	ApiKeySource pulumi.StringInput `pulumi:"apiKeySource"`
	// The list of binary media types supported by the RestApi. By default, the RestApi supports only UTF-8-encoded text payloads.
	BinaryMediaTypes pulumi.StringArrayInput `pulumi:"binaryMediaTypes"`
	// An OpenAPI specification that defines the set of routes and integrations to create as part of the REST API.
	Body pulumi.StringInput `pulumi:"body"`
	// The description of the REST API
	Description pulumi.StringInput `pulumi:"description"`
	// Nested argument defining API endpoint configuration including endpoint type. Defined below.
	EndpointConfiguration RestApiEndpointConfigurationInput `pulumi:"endpointConfiguration"`
	// Minimum response size to compress for the REST API. Integer between -1 and 10485760 (10MB). Setting a value greater than -1 will enable compression, -1 disables compression (default).
	MinimumCompressionSize pulumi.IntInput `pulumi:"minimumCompressionSize"`
	// The name of the REST API
	Name pulumi.StringInput `pulumi:"name"`
	Policy pulumi.StringInput `pulumi:"policy"`
	// Key-value mapping of resource tags
	Tags pulumi.MapInput `pulumi:"tags"`
}
type RestApiEndpointConfiguration struct {
	// A list of endpoint types. This resource currently only supports managing a single value. Valid values: `EDGE`, `REGIONAL` or `PRIVATE`. If unspecified, defaults to `EDGE`. Must be declared as `REGIONAL` in non-Commercial partitions. Refer to the [documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/create-regional-api.html) for more information on the difference between edge-optimized and regional APIs.
	Types string `pulumi:"types"`
}
var restApiEndpointConfigurationType = reflect.TypeOf((*RestApiEndpointConfiguration)(nil)).Elem()

type RestApiEndpointConfigurationInput interface {
	pulumi.Input

	ToRestApiEndpointConfigurationOutput() RestApiEndpointConfigurationOutput
	ToRestApiEndpointConfigurationOutputWithContext(ctx context.Context) RestApiEndpointConfigurationOutput
}

type RestApiEndpointConfigurationArgs struct {
	// A list of endpoint types. This resource currently only supports managing a single value. Valid values: `EDGE`, `REGIONAL` or `PRIVATE`. If unspecified, defaults to `EDGE`. Must be declared as `REGIONAL` in non-Commercial partitions. Refer to the [documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/create-regional-api.html) for more information on the difference between edge-optimized and regional APIs.
	Types pulumi.StringInput `pulumi:"types"`
}

func (RestApiEndpointConfigurationArgs) ElementType() reflect.Type {
	return restApiEndpointConfigurationType
}

func (a RestApiEndpointConfigurationArgs) ToRestApiEndpointConfigurationOutput() RestApiEndpointConfigurationOutput {
	return pulumi.ToOutput(a).(RestApiEndpointConfigurationOutput)
}

func (a RestApiEndpointConfigurationArgs) ToRestApiEndpointConfigurationOutputWithContext(ctx context.Context) RestApiEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, a).(RestApiEndpointConfigurationOutput)
}

type RestApiEndpointConfigurationOutput struct { *pulumi.OutputState }

// A list of endpoint types. This resource currently only supports managing a single value. Valid values: `EDGE`, `REGIONAL` or `PRIVATE`. If unspecified, defaults to `EDGE`. Must be declared as `REGIONAL` in non-Commercial partitions. Refer to the [documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/create-regional-api.html) for more information on the difference between edge-optimized and regional APIs.
func (o RestApiEndpointConfigurationOutput) Types() pulumi.StringOutput {
	return o.Apply(func(v RestApiEndpointConfiguration) string {
		return v.Types
	}).(pulumi.StringOutput)
}

func (RestApiEndpointConfigurationOutput) ElementType() reflect.Type {
	return restApiEndpointConfigurationType
}

func (o RestApiEndpointConfigurationOutput) ToRestApiEndpointConfigurationOutput() RestApiEndpointConfigurationOutput {
	return o
}

func (o RestApiEndpointConfigurationOutput) ToRestApiEndpointConfigurationOutputWithContext(ctx context.Context) RestApiEndpointConfigurationOutput {
	return o
}

func init() { pulumi.RegisterOutputType(RestApiEndpointConfigurationOutput{}) }

