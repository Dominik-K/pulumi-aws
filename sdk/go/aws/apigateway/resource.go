// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_resource.html.markdown.
type Resource struct {
	pulumi.CustomResourceState

	// The ID of the parent API resource
	ParentId pulumi.StringOutput `pulumi:"parentId"`

	// The complete path for this API resource, including all parent paths.
	Path pulumi.StringOutput `pulumi:"path"`

	// The last path segment of this API resource.
	PathPart pulumi.StringOutput `pulumi:"pathPart"`

	// The ID of the associated REST API
	RestApi pulumi.StringOutput `pulumi:"restApi"`
}

// NewResource registers a new resource with the given unique name, arguments, and options.
func NewResource(ctx *pulumi.Context,
	name string, args *ResourceArgs, opts ...pulumi.ResourceOption) (*Resource, error) {
	if args == nil || args.ParentId == nil {
		return nil, errors.New("missing required argument 'ParentId'")
	}
	if args == nil || args.PathPart == nil {
		return nil, errors.New("missing required argument 'PathPart'")
	}
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ParentId; i != nil { inputs["parentId"] = i.ToStringOutput() }
		if i := args.PathPart; i != nil { inputs["pathPart"] = i.ToStringOutput() }
		if i := args.RestApi; i != nil { inputs["restApi"] = i.ToStringOutput() }
	}
	var resource Resource
	err := ctx.RegisterResource("aws:apigateway/resource:Resource", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResource gets an existing Resource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceState, opts ...pulumi.ResourceOption) (*Resource, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.ParentId; i != nil { inputs["parentId"] = i.ToStringOutput() }
		if i := state.Path; i != nil { inputs["path"] = i.ToStringOutput() }
		if i := state.PathPart; i != nil { inputs["pathPart"] = i.ToStringOutput() }
		if i := state.RestApi; i != nil { inputs["restApi"] = i.ToStringOutput() }
	}
	var resource Resource
	err := ctx.ReadResource("aws:apigateway/resource:Resource", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Resource resources.
type ResourceState struct {
	// The ID of the parent API resource
	ParentId pulumi.StringInput `pulumi:"parentId"`
	// The complete path for this API resource, including all parent paths.
	Path pulumi.StringInput `pulumi:"path"`
	// The last path segment of this API resource.
	PathPart pulumi.StringInput `pulumi:"pathPart"`
	// The ID of the associated REST API
	RestApi pulumi.StringInput `pulumi:"restApi"`
}

// The set of arguments for constructing a Resource resource.
type ResourceArgs struct {
	// The ID of the parent API resource
	ParentId pulumi.StringInput `pulumi:"parentId"`
	// The last path segment of this API resource.
	PathPart pulumi.StringInput `pulumi:"pathPart"`
	// The ID of the associated REST API
	RestApi pulumi.StringInput `pulumi:"restApi"`
}
