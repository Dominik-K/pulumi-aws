// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an OpsWorks RDS DB Instance resource.
// 
// > **Note:** All arguments including the username and password will be stored in the raw state as plain-text.
// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/opsworks_rds_db_instance.html.markdown.
type RdsDbInstance struct {
	pulumi.CustomResourceState

	// A db password
	DbPassword pulumi.StringOutput `pulumi:"dbPassword"`

	// A db username
	DbUser pulumi.StringOutput `pulumi:"dbUser"`

	// The db instance to register for this stack. Changing this will force a new resource.
	RdsDbInstanceArn pulumi.StringOutput `pulumi:"rdsDbInstanceArn"`

	// The stack to register a db instance for. Changing this will force a new resource.
	StackId pulumi.StringOutput `pulumi:"stackId"`
}

// NewRdsDbInstance registers a new resource with the given unique name, arguments, and options.
func NewRdsDbInstance(ctx *pulumi.Context,
	name string, args *RdsDbInstanceArgs, opts ...pulumi.ResourceOption) (*RdsDbInstance, error) {
	if args == nil || args.DbPassword == nil {
		return nil, errors.New("missing required argument 'DbPassword'")
	}
	if args == nil || args.DbUser == nil {
		return nil, errors.New("missing required argument 'DbUser'")
	}
	if args == nil || args.RdsDbInstanceArn == nil {
		return nil, errors.New("missing required argument 'RdsDbInstanceArn'")
	}
	if args == nil || args.StackId == nil {
		return nil, errors.New("missing required argument 'StackId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.DbPassword; i != nil { inputs["dbPassword"] = i.ToStringOutput() }
		if i := args.DbUser; i != nil { inputs["dbUser"] = i.ToStringOutput() }
		if i := args.RdsDbInstanceArn; i != nil { inputs["rdsDbInstanceArn"] = i.ToStringOutput() }
		if i := args.StackId; i != nil { inputs["stackId"] = i.ToStringOutput() }
	}
	var resource RdsDbInstance
	err := ctx.RegisterResource("aws:opsworks/rdsDbInstance:RdsDbInstance", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdsDbInstance gets an existing RdsDbInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdsDbInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdsDbInstanceState, opts ...pulumi.ResourceOption) (*RdsDbInstance, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.DbPassword; i != nil { inputs["dbPassword"] = i.ToStringOutput() }
		if i := state.DbUser; i != nil { inputs["dbUser"] = i.ToStringOutput() }
		if i := state.RdsDbInstanceArn; i != nil { inputs["rdsDbInstanceArn"] = i.ToStringOutput() }
		if i := state.StackId; i != nil { inputs["stackId"] = i.ToStringOutput() }
	}
	var resource RdsDbInstance
	err := ctx.ReadResource("aws:opsworks/rdsDbInstance:RdsDbInstance", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdsDbInstance resources.
type RdsDbInstanceState struct {
	// A db password
	DbPassword pulumi.StringInput `pulumi:"dbPassword"`
	// A db username
	DbUser pulumi.StringInput `pulumi:"dbUser"`
	// The db instance to register for this stack. Changing this will force a new resource.
	RdsDbInstanceArn pulumi.StringInput `pulumi:"rdsDbInstanceArn"`
	// The stack to register a db instance for. Changing this will force a new resource.
	StackId pulumi.StringInput `pulumi:"stackId"`
}

// The set of arguments for constructing a RdsDbInstance resource.
type RdsDbInstanceArgs struct {
	// A db password
	DbPassword pulumi.StringInput `pulumi:"dbPassword"`
	// A db username
	DbUser pulumi.StringInput `pulumi:"dbUser"`
	// The db instance to register for this stack. Changing this will force a new resource.
	RdsDbInstanceArn pulumi.StringInput `pulumi:"rdsDbInstanceArn"`
	// The stack to register a db instance for. Changing this will force a new resource.
	StackId pulumi.StringInput `pulumi:"stackId"`
}
