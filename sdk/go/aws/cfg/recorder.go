// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an AWS Config Configuration Recorder. Please note that this resource **does not start** the created recorder automatically.
// 
// > **Note:** _Starting_ the Configuration Recorder requires a [delivery channel](https://www.terraform.io/docs/providers/aws/r/config_delivery_channel.html) (while delivery channel creation requires Configuration Recorder). This is why [`cfg.RecorderStatus`](https://www.terraform.io/docs/providers/aws/r/config_configuration_recorder_status.html) is a separate resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/config_configuration_recorder.html.markdown.
type Recorder struct {
	pulumi.CustomResourceState

	// The name of the recorder. Defaults to `default`. Changing it recreates the resource.
	Name pulumi.StringOutput `pulumi:"name"`

	// Recording group - see below.
	RecordingGroup RecorderRecordingGroupOutput `pulumi:"recordingGroup"`

	// Amazon Resource Name (ARN) of the IAM role.
	// used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account.
	// See [AWS Docs](http://docs.aws.amazon.com/config/latest/developerguide/iamrole-permissions.html) for more details.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
}

// NewRecorder registers a new resource with the given unique name, arguments, and options.
func NewRecorder(ctx *pulumi.Context,
	name string, args *RecorderArgs, opts ...pulumi.ResourceOption) (*Recorder, error) {
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.RecordingGroup; i != nil { inputs["recordingGroup"] = i.ToRecorderRecordingGroupOutput() }
		if i := args.RoleArn; i != nil { inputs["roleArn"] = i.ToStringOutput() }
	}
	var resource Recorder
	err := ctx.RegisterResource("aws:cfg/recorder:Recorder", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecorder gets an existing Recorder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecorder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecorderState, opts ...pulumi.ResourceOption) (*Recorder, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.RecordingGroup; i != nil { inputs["recordingGroup"] = i.ToRecorderRecordingGroupOutput() }
		if i := state.RoleArn; i != nil { inputs["roleArn"] = i.ToStringOutput() }
	}
	var resource Recorder
	err := ctx.ReadResource("aws:cfg/recorder:Recorder", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Recorder resources.
type RecorderState struct {
	// The name of the recorder. Defaults to `default`. Changing it recreates the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Recording group - see below.
	RecordingGroup RecorderRecordingGroupInput `pulumi:"recordingGroup"`
	// Amazon Resource Name (ARN) of the IAM role.
	// used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account.
	// See [AWS Docs](http://docs.aws.amazon.com/config/latest/developerguide/iamrole-permissions.html) for more details.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

// The set of arguments for constructing a Recorder resource.
type RecorderArgs struct {
	// The name of the recorder. Defaults to `default`. Changing it recreates the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Recording group - see below.
	RecordingGroup RecorderRecordingGroupInput `pulumi:"recordingGroup"`
	// Amazon Resource Name (ARN) of the IAM role.
	// used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account.
	// See [AWS Docs](http://docs.aws.amazon.com/config/latest/developerguide/iamrole-permissions.html) for more details.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}
type RecorderRecordingGroup struct {
	// Specifies whether AWS Config records configuration changes
	// for every supported type of regional resource (which includes any new type that will become supported in the future).
	// Conflicts with `resourceTypes`. Defaults to `true`.
	AllSupported *bool `pulumi:"allSupported"`
	// Specifies whether AWS Config includes all supported types of *global resources*
	// with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
	IncludeGlobalResourceTypes *bool `pulumi:"includeGlobalResourceTypes"`
	// A list that specifies the types of AWS resources for which
	// AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`).
	// See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ResourceTypes *[]string `pulumi:"resourceTypes"`
}
var recorderRecordingGroupType = reflect.TypeOf((*RecorderRecordingGroup)(nil)).Elem()

type RecorderRecordingGroupInput interface {
	pulumi.Input

	ToRecorderRecordingGroupOutput() RecorderRecordingGroupOutput
	ToRecorderRecordingGroupOutputWithContext(ctx context.Context) RecorderRecordingGroupOutput
}

type RecorderRecordingGroupArgs struct {
	// Specifies whether AWS Config records configuration changes
	// for every supported type of regional resource (which includes any new type that will become supported in the future).
	// Conflicts with `resourceTypes`. Defaults to `true`.
	AllSupported pulumi.BoolInput `pulumi:"allSupported"`
	// Specifies whether AWS Config includes all supported types of *global resources*
	// with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
	IncludeGlobalResourceTypes pulumi.BoolInput `pulumi:"includeGlobalResourceTypes"`
	// A list that specifies the types of AWS resources for which
	// AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`).
	// See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
}

func (RecorderRecordingGroupArgs) ElementType() reflect.Type {
	return recorderRecordingGroupType
}

func (a RecorderRecordingGroupArgs) ToRecorderRecordingGroupOutput() RecorderRecordingGroupOutput {
	return pulumi.ToOutput(a).(RecorderRecordingGroupOutput)
}

func (a RecorderRecordingGroupArgs) ToRecorderRecordingGroupOutputWithContext(ctx context.Context) RecorderRecordingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, a).(RecorderRecordingGroupOutput)
}

type RecorderRecordingGroupOutput struct { *pulumi.OutputState }

// Specifies whether AWS Config records configuration changes
// for every supported type of regional resource (which includes any new type that will become supported in the future).
// Conflicts with `resourceTypes`. Defaults to `true`.
func (o RecorderRecordingGroupOutput) AllSupported() pulumi.BoolOutput {
	return o.Apply(func(v RecorderRecordingGroup) bool {
		if v.AllSupported == nil { return *new(bool) } else { return *v.AllSupported }
	}).(pulumi.BoolOutput)
}

// Specifies whether AWS Config includes all supported types of *global resources*
// with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
func (o RecorderRecordingGroupOutput) IncludeGlobalResourceTypes() pulumi.BoolOutput {
	return o.Apply(func(v RecorderRecordingGroup) bool {
		if v.IncludeGlobalResourceTypes == nil { return *new(bool) } else { return *v.IncludeGlobalResourceTypes }
	}).(pulumi.BoolOutput)
}

// A list that specifies the types of AWS resources for which
// AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`).
// See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
func (o RecorderRecordingGroupOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.Apply(func(v RecorderRecordingGroup) []string {
		if v.ResourceTypes == nil { return *new([]string) } else { return *v.ResourceTypes }
	}).(pulumi.StringArrayOutput)
}

func (RecorderRecordingGroupOutput) ElementType() reflect.Type {
	return recorderRecordingGroupType
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupOutput() RecorderRecordingGroupOutput {
	return o
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupOutputWithContext(ctx context.Context) RecorderRecordingGroupOutput {
	return o
}

func init() { pulumi.RegisterOutputType(RecorderRecordingGroupOutput{}) }

