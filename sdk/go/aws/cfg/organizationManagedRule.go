// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Config Organization Managed Rule. More information about these rules can be found in the [Enabling AWS Config Rules Across all Accounts in Your Organization](https://docs.aws.amazon.com/config/latest/developerguide/config-rule-multi-account-deployment.html) and [AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) documentation. For working with Organization Custom Rules (those invoking a custom Lambda Function), see the [`cfg.OrganizationCustomRule` resource](https://www.terraform.io/docs/providers/aws/r/config_organization_custom_rule.html).
// 
// > **NOTE:** This resource must be created in the Organization master account and rules will include the master account unless its ID is added to the `excludedAccounts` argument.
// 
// > **NOTE:** Every Organization account except those configured in the `excludedAccounts` argument must have a Configuration Recorder with proper IAM permissions before the rule will successfully create or update. See also the [`cfg.Recorder` resource](https://www.terraform.io/docs/providers/aws/r/config_configuration_recorder.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/config_organization_managed_rule.html.markdown.
type OrganizationManagedRule struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the rule
	Arn pulumi.StringOutput `pulumi:"arn"`

	// Description of the rule
	Description pulumi.StringOutput `pulumi:"description"`

	// List of AWS account identifiers to exclude from the rule
	ExcludedAccounts pulumi.StringArrayOutput `pulumi:"excludedAccounts"`

	// A string in JSON format that is passed to the AWS Config Rule Lambda Function
	InputParameters pulumi.StringOutput `pulumi:"inputParameters"`

	// The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
	MaximumExecutionFrequency pulumi.StringOutput `pulumi:"maximumExecutionFrequency"`

	// The name of the rule
	Name pulumi.StringOutput `pulumi:"name"`

	// Identifier of the AWS resource to evaluate
	ResourceIdScope pulumi.StringOutput `pulumi:"resourceIdScope"`

	// List of types of AWS resources to evaluate
	ResourceTypesScopes pulumi.StringArrayOutput `pulumi:"resourceTypesScopes"`

	// Identifier of an available AWS Config Managed Rule to call. For available values, see the [List of AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html) documentation
	RuleIdentifier pulumi.StringOutput `pulumi:"ruleIdentifier"`

	// Tag key of AWS resources to evaluate
	TagKeyScope pulumi.StringOutput `pulumi:"tagKeyScope"`

	// Tag value of AWS resources to evaluate
	TagValueScope pulumi.StringOutput `pulumi:"tagValueScope"`
}

// NewOrganizationManagedRule registers a new resource with the given unique name, arguments, and options.
func NewOrganizationManagedRule(ctx *pulumi.Context,
	name string, args *OrganizationManagedRuleArgs, opts ...pulumi.ResourceOption) (*OrganizationManagedRule, error) {
	if args == nil || args.RuleIdentifier == nil {
		return nil, errors.New("missing required argument 'RuleIdentifier'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := args.ExcludedAccounts; i != nil { inputs["excludedAccounts"] = i.ToStringArrayOutput() }
		if i := args.InputParameters; i != nil { inputs["inputParameters"] = i.ToStringOutput() }
		if i := args.MaximumExecutionFrequency; i != nil { inputs["maximumExecutionFrequency"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.ResourceIdScope; i != nil { inputs["resourceIdScope"] = i.ToStringOutput() }
		if i := args.ResourceTypesScopes; i != nil { inputs["resourceTypesScopes"] = i.ToStringArrayOutput() }
		if i := args.RuleIdentifier; i != nil { inputs["ruleIdentifier"] = i.ToStringOutput() }
		if i := args.TagKeyScope; i != nil { inputs["tagKeyScope"] = i.ToStringOutput() }
		if i := args.TagValueScope; i != nil { inputs["tagValueScope"] = i.ToStringOutput() }
	}
	var resource OrganizationManagedRule
	err := ctx.RegisterResource("aws:cfg/organizationManagedRule:OrganizationManagedRule", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationManagedRule gets an existing OrganizationManagedRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationManagedRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationManagedRuleState, opts ...pulumi.ResourceOption) (*OrganizationManagedRule, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := state.ExcludedAccounts; i != nil { inputs["excludedAccounts"] = i.ToStringArrayOutput() }
		if i := state.InputParameters; i != nil { inputs["inputParameters"] = i.ToStringOutput() }
		if i := state.MaximumExecutionFrequency; i != nil { inputs["maximumExecutionFrequency"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.ResourceIdScope; i != nil { inputs["resourceIdScope"] = i.ToStringOutput() }
		if i := state.ResourceTypesScopes; i != nil { inputs["resourceTypesScopes"] = i.ToStringArrayOutput() }
		if i := state.RuleIdentifier; i != nil { inputs["ruleIdentifier"] = i.ToStringOutput() }
		if i := state.TagKeyScope; i != nil { inputs["tagKeyScope"] = i.ToStringOutput() }
		if i := state.TagValueScope; i != nil { inputs["tagValueScope"] = i.ToStringOutput() }
	}
	var resource OrganizationManagedRule
	err := ctx.ReadResource("aws:cfg/organizationManagedRule:OrganizationManagedRule", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationManagedRule resources.
type OrganizationManagedRuleState struct {
	// Amazon Resource Name (ARN) of the rule
	Arn pulumi.StringInput `pulumi:"arn"`
	// Description of the rule
	Description pulumi.StringInput `pulumi:"description"`
	// List of AWS account identifiers to exclude from the rule
	ExcludedAccounts pulumi.StringArrayInput `pulumi:"excludedAccounts"`
	// A string in JSON format that is passed to the AWS Config Rule Lambda Function
	InputParameters pulumi.StringInput `pulumi:"inputParameters"`
	// The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
	MaximumExecutionFrequency pulumi.StringInput `pulumi:"maximumExecutionFrequency"`
	// The name of the rule
	Name pulumi.StringInput `pulumi:"name"`
	// Identifier of the AWS resource to evaluate
	ResourceIdScope pulumi.StringInput `pulumi:"resourceIdScope"`
	// List of types of AWS resources to evaluate
	ResourceTypesScopes pulumi.StringArrayInput `pulumi:"resourceTypesScopes"`
	// Identifier of an available AWS Config Managed Rule to call. For available values, see the [List of AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html) documentation
	RuleIdentifier pulumi.StringInput `pulumi:"ruleIdentifier"`
	// Tag key of AWS resources to evaluate
	TagKeyScope pulumi.StringInput `pulumi:"tagKeyScope"`
	// Tag value of AWS resources to evaluate
	TagValueScope pulumi.StringInput `pulumi:"tagValueScope"`
}

// The set of arguments for constructing a OrganizationManagedRule resource.
type OrganizationManagedRuleArgs struct {
	// Description of the rule
	Description pulumi.StringInput `pulumi:"description"`
	// List of AWS account identifiers to exclude from the rule
	ExcludedAccounts pulumi.StringArrayInput `pulumi:"excludedAccounts"`
	// A string in JSON format that is passed to the AWS Config Rule Lambda Function
	InputParameters pulumi.StringInput `pulumi:"inputParameters"`
	// The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
	MaximumExecutionFrequency pulumi.StringInput `pulumi:"maximumExecutionFrequency"`
	// The name of the rule
	Name pulumi.StringInput `pulumi:"name"`
	// Identifier of the AWS resource to evaluate
	ResourceIdScope pulumi.StringInput `pulumi:"resourceIdScope"`
	// List of types of AWS resources to evaluate
	ResourceTypesScopes pulumi.StringArrayInput `pulumi:"resourceTypesScopes"`
	// Identifier of an available AWS Config Managed Rule to call. For available values, see the [List of AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html) documentation
	RuleIdentifier pulumi.StringInput `pulumi:"ruleIdentifier"`
	// Tag key of AWS resources to evaluate
	TagKeyScope pulumi.StringInput `pulumi:"tagKeyScope"`
	// Tag value of AWS resources to evaluate
	TagValueScope pulumi.StringInput `pulumi:"tagValueScope"`
}
