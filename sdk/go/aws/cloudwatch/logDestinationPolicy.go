// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CloudWatch Logs destination policy resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudwatch_log_destination_policy.html.markdown.
type LogDestinationPolicy struct {
	pulumi.CustomResourceState

	// The policy document. This is a JSON formatted string.
	AccessPolicy pulumi.StringOutput `pulumi:"accessPolicy"`

	// A name for the subscription filter
	DestinationName pulumi.StringOutput `pulumi:"destinationName"`
}

// NewLogDestinationPolicy registers a new resource with the given unique name, arguments, and options.
func NewLogDestinationPolicy(ctx *pulumi.Context,
	name string, args *LogDestinationPolicyArgs, opts ...pulumi.ResourceOption) (*LogDestinationPolicy, error) {
	if args == nil || args.AccessPolicy == nil {
		return nil, errors.New("missing required argument 'AccessPolicy'")
	}
	if args == nil || args.DestinationName == nil {
		return nil, errors.New("missing required argument 'DestinationName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.AccessPolicy; i != nil { inputs["accessPolicy"] = i.ToStringOutput() }
		if i := args.DestinationName; i != nil { inputs["destinationName"] = i.ToStringOutput() }
	}
	var resource LogDestinationPolicy
	err := ctx.RegisterResource("aws:cloudwatch/logDestinationPolicy:LogDestinationPolicy", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogDestinationPolicy gets an existing LogDestinationPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogDestinationPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogDestinationPolicyState, opts ...pulumi.ResourceOption) (*LogDestinationPolicy, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.AccessPolicy; i != nil { inputs["accessPolicy"] = i.ToStringOutput() }
		if i := state.DestinationName; i != nil { inputs["destinationName"] = i.ToStringOutput() }
	}
	var resource LogDestinationPolicy
	err := ctx.ReadResource("aws:cloudwatch/logDestinationPolicy:LogDestinationPolicy", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogDestinationPolicy resources.
type LogDestinationPolicyState struct {
	// The policy document. This is a JSON formatted string.
	AccessPolicy pulumi.StringInput `pulumi:"accessPolicy"`
	// A name for the subscription filter
	DestinationName pulumi.StringInput `pulumi:"destinationName"`
}

// The set of arguments for constructing a LogDestinationPolicy resource.
type LogDestinationPolicyArgs struct {
	// The policy document. This is a JSON formatted string.
	AccessPolicy pulumi.StringInput `pulumi:"accessPolicy"`
	// A name for the subscription filter
	DestinationName pulumi.StringInput `pulumi:"destinationName"`
}
