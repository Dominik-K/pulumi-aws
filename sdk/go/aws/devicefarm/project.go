// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package devicefarm

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to manage AWS Device Farm Projects. 
// Please keep in mind that this feature is only supported on the "us-west-2" region.
// This resource will error if you try to create a project in another region.
// 
// For more information about Device Farm Projects, see the AWS Documentation on
// [Device Farm Projects][aws-get-project].
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/devicefarm_project.html.markdown.
type Project struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name of this project
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The name of the project
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOption) (*Project, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
	}
	var resource Project
	err := ctx.RegisterResource("aws:devicefarm/project:Project", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectState, opts ...pulumi.ResourceOption) (*Project, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
	}
	var resource Project
	err := ctx.ReadResource("aws:devicefarm/project:Project", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Project resources.
type ProjectState struct {
	// The Amazon Resource Name of this project
	Arn pulumi.StringInput `pulumi:"arn"`
	// The name of the project
	Name pulumi.StringInput `pulumi:"name"`
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// The name of the project
	Name pulumi.StringInput `pulumi:"name"`
}
