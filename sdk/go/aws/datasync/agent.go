// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an AWS DataSync Agent deployed on premises.
// 
// > **NOTE:** One of `activationKey` or `ipAddress` must be provided for resource creation (agent activation). Neither is required for resource import. If using `ipAddress`, this provider must be able to make an HTTP (port 80) GET request to the specified IP address from where it is running. The agent will turn off that HTTP server after activation.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/datasync_agent.html.markdown.
type Agent struct {
	pulumi.CustomResourceState

	// DataSync Agent activation key during resource creation. Conflicts with `ipAddress`. If an `ipAddress` is provided instead, the provider will retrieve the `activationKey` as part of the resource creation.
	ActivationKey pulumi.StringOutput `pulumi:"activationKey"`

	// Amazon Resource Name (ARN) of the DataSync Agent.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activationKey`. DataSync Agent must be accessible on port 80 from where the provider is running.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`

	// Name of the DataSync Agent.
	Name pulumi.StringOutput `pulumi:"name"`

	// Key-value pairs of resource tags to assign to the DataSync Agent.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAgent registers a new resource with the given unique name, arguments, and options.
func NewAgent(ctx *pulumi.Context,
	name string, args *AgentArgs, opts ...pulumi.ResourceOption) (*Agent, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ActivationKey; i != nil { inputs["activationKey"] = i.ToStringOutput() }
		if i := args.IpAddress; i != nil { inputs["ipAddress"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToStringMapOutput() }
	}
	var resource Agent
	err := ctx.RegisterResource("aws:datasync/agent:Agent", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgent gets an existing Agent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentState, opts ...pulumi.ResourceOption) (*Agent, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.ActivationKey; i != nil { inputs["activationKey"] = i.ToStringOutput() }
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.IpAddress; i != nil { inputs["ipAddress"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToStringMapOutput() }
	}
	var resource Agent
	err := ctx.ReadResource("aws:datasync/agent:Agent", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Agent resources.
type AgentState struct {
	// DataSync Agent activation key during resource creation. Conflicts with `ipAddress`. If an `ipAddress` is provided instead, the provider will retrieve the `activationKey` as part of the resource creation.
	ActivationKey pulumi.StringInput `pulumi:"activationKey"`
	// Amazon Resource Name (ARN) of the DataSync Agent.
	Arn pulumi.StringInput `pulumi:"arn"`
	// DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activationKey`. DataSync Agent must be accessible on port 80 from where the provider is running.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Name of the DataSync Agent.
	Name pulumi.StringInput `pulumi:"name"`
	// Key-value pairs of resource tags to assign to the DataSync Agent.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

// The set of arguments for constructing a Agent resource.
type AgentArgs struct {
	// DataSync Agent activation key during resource creation. Conflicts with `ipAddress`. If an `ipAddress` is provided instead, the provider will retrieve the `activationKey` as part of the resource creation.
	ActivationKey pulumi.StringInput `pulumi:"activationKey"`
	// DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activationKey`. DataSync Agent must be accessible on port 80 from where the provider is running.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Name of the DataSync Agent.
	Name pulumi.StringInput `pulumi:"name"`
	// Key-value pairs of resource tags to assign to the DataSync Agent.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}
