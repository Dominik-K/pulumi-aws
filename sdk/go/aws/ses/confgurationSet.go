// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ConfgurationSet struct {
	pulumi.CustomResourceState

	Name pulumi.StringOutput `pulumi:"name"`
}

// NewConfgurationSet registers a new resource with the given unique name, arguments, and options.
func NewConfgurationSet(ctx *pulumi.Context,
	name string, args *ConfgurationSetArgs, opts ...pulumi.ResourceOption) (*ConfgurationSet, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
	}
	var resource ConfgurationSet
	err := ctx.RegisterResource("aws:ses/confgurationSet:ConfgurationSet", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfgurationSet gets an existing ConfgurationSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfgurationSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfgurationSetState, opts ...pulumi.ResourceOption) (*ConfgurationSet, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
	}
	var resource ConfgurationSet
	err := ctx.ReadResource("aws:ses/confgurationSet:ConfgurationSet", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfgurationSet resources.
type ConfgurationSetState struct {
	Name pulumi.StringInput `pulumi:"name"`
}

// The set of arguments for constructing a ConfgurationSet resource.
type ConfgurationSetArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}
