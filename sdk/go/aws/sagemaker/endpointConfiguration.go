// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a SageMaker endpoint configuration resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sagemaker_endpoint_configuration.html.markdown.
type EndpointConfiguration struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this endpoint configuration.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
	KmsKeyArn pulumi.StringOutput `pulumi:"kmsKeyArn"`

	// The name of the endpoint configuration. If omitted, this provider will assign a random, unique name.
	Name pulumi.StringOutput `pulumi:"name"`

	// Fields are documented below.
	ProductionVariants EndpointConfigurationProductionVariantsArrayOutput `pulumi:"productionVariants"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewEndpointConfiguration registers a new resource with the given unique name, arguments, and options.
func NewEndpointConfiguration(ctx *pulumi.Context,
	name string, args *EndpointConfigurationArgs, opts ...pulumi.ResourceOption) (*EndpointConfiguration, error) {
	if args == nil || args.ProductionVariants == nil {
		return nil, errors.New("missing required argument 'ProductionVariants'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.KmsKeyArn; i != nil { inputs["kmsKeyArn"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.ProductionVariants; i != nil { inputs["productionVariants"] = i.ToEndpointConfigurationProductionVariantsArrayOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource EndpointConfiguration
	err := ctx.RegisterResource("aws:sagemaker/endpointConfiguration:EndpointConfiguration", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointConfiguration gets an existing EndpointConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointConfigurationState, opts ...pulumi.ResourceOption) (*EndpointConfiguration, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.KmsKeyArn; i != nil { inputs["kmsKeyArn"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.ProductionVariants; i != nil { inputs["productionVariants"] = i.ToEndpointConfigurationProductionVariantsArrayOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource EndpointConfiguration
	err := ctx.ReadResource("aws:sagemaker/endpointConfiguration:EndpointConfiguration", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointConfiguration resources.
type EndpointConfigurationState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this endpoint configuration.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
	// The name of the endpoint configuration. If omitted, this provider will assign a random, unique name.
	Name pulumi.StringInput `pulumi:"name"`
	// Fields are documented below.
	ProductionVariants EndpointConfigurationProductionVariantsArrayInput `pulumi:"productionVariants"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a EndpointConfiguration resource.
type EndpointConfigurationArgs struct {
	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
	// The name of the endpoint configuration. If omitted, this provider will assign a random, unique name.
	Name pulumi.StringInput `pulumi:"name"`
	// Fields are documented below.
	ProductionVariants EndpointConfigurationProductionVariantsArrayInput `pulumi:"productionVariants"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}
type EndpointConfigurationProductionVariants struct {
	AcceleratorType *string `pulumi:"acceleratorType"`
	InitialInstanceCount int `pulumi:"initialInstanceCount"`
	InitialVariantWeight *float64 `pulumi:"initialVariantWeight"`
	InstanceType string `pulumi:"instanceType"`
	ModelName string `pulumi:"modelName"`
	VariantName *string `pulumi:"variantName"`
}
var endpointConfigurationProductionVariantsType = reflect.TypeOf((*EndpointConfigurationProductionVariants)(nil)).Elem()

type EndpointConfigurationProductionVariantsInput interface {
	pulumi.Input

	ToEndpointConfigurationProductionVariantsOutput() EndpointConfigurationProductionVariantsOutput
	ToEndpointConfigurationProductionVariantsOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantsOutput
}

type EndpointConfigurationProductionVariantsArgs struct {
	AcceleratorType pulumi.StringInput `pulumi:"acceleratorType"`
	InitialInstanceCount pulumi.IntInput `pulumi:"initialInstanceCount"`
	InitialVariantWeight pulumi.Float64Input `pulumi:"initialVariantWeight"`
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	ModelName pulumi.StringInput `pulumi:"modelName"`
	VariantName pulumi.StringInput `pulumi:"variantName"`
}

func (EndpointConfigurationProductionVariantsArgs) ElementType() reflect.Type {
	return endpointConfigurationProductionVariantsType
}

func (a EndpointConfigurationProductionVariantsArgs) ToEndpointConfigurationProductionVariantsOutput() EndpointConfigurationProductionVariantsOutput {
	return pulumi.ToOutput(a).(EndpointConfigurationProductionVariantsOutput)
}

func (a EndpointConfigurationProductionVariantsArgs) ToEndpointConfigurationProductionVariantsOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(EndpointConfigurationProductionVariantsOutput)
}

type EndpointConfigurationProductionVariantsOutput struct { *pulumi.OutputState }

func (o EndpointConfigurationProductionVariantsOutput) AcceleratorType() pulumi.StringOutput {
	return o.Apply(func(v EndpointConfigurationProductionVariants) string {
		if v.AcceleratorType == nil { return *new(string) } else { return *v.AcceleratorType }
	}).(pulumi.StringOutput)
}

func (o EndpointConfigurationProductionVariantsOutput) InitialInstanceCount() pulumi.IntOutput {
	return o.Apply(func(v EndpointConfigurationProductionVariants) int {
		return v.InitialInstanceCount
	}).(pulumi.IntOutput)
}

func (o EndpointConfigurationProductionVariantsOutput) InitialVariantWeight() pulumi.Float64Output {
	return o.Apply(func(v EndpointConfigurationProductionVariants) float64 {
		if v.InitialVariantWeight == nil { return *new(float64) } else { return *v.InitialVariantWeight }
	}).(pulumi.Float64Output)
}

func (o EndpointConfigurationProductionVariantsOutput) InstanceType() pulumi.StringOutput {
	return o.Apply(func(v EndpointConfigurationProductionVariants) string {
		return v.InstanceType
	}).(pulumi.StringOutput)
}

func (o EndpointConfigurationProductionVariantsOutput) ModelName() pulumi.StringOutput {
	return o.Apply(func(v EndpointConfigurationProductionVariants) string {
		return v.ModelName
	}).(pulumi.StringOutput)
}

func (o EndpointConfigurationProductionVariantsOutput) VariantName() pulumi.StringOutput {
	return o.Apply(func(v EndpointConfigurationProductionVariants) string {
		if v.VariantName == nil { return *new(string) } else { return *v.VariantName }
	}).(pulumi.StringOutput)
}

func (EndpointConfigurationProductionVariantsOutput) ElementType() reflect.Type {
	return endpointConfigurationProductionVariantsType
}

func (o EndpointConfigurationProductionVariantsOutput) ToEndpointConfigurationProductionVariantsOutput() EndpointConfigurationProductionVariantsOutput {
	return o
}

func (o EndpointConfigurationProductionVariantsOutput) ToEndpointConfigurationProductionVariantsOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantsOutput {
	return o
}

func init() { pulumi.RegisterOutputType(EndpointConfigurationProductionVariantsOutput{}) }

var endpointConfigurationProductionVariantsArrayType = reflect.TypeOf((*[]EndpointConfigurationProductionVariants)(nil)).Elem()

type EndpointConfigurationProductionVariantsArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationProductionVariantsArrayOutput() EndpointConfigurationProductionVariantsArrayOutput
	ToEndpointConfigurationProductionVariantsArrayOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantsArrayOutput
}

type EndpointConfigurationProductionVariantsArrayArgs []EndpointConfigurationProductionVariantsInput

func (EndpointConfigurationProductionVariantsArrayArgs) ElementType() reflect.Type {
	return endpointConfigurationProductionVariantsArrayType
}

func (a EndpointConfigurationProductionVariantsArrayArgs) ToEndpointConfigurationProductionVariantsArrayOutput() EndpointConfigurationProductionVariantsArrayOutput {
	return pulumi.ToOutput(a).(EndpointConfigurationProductionVariantsArrayOutput)
}

func (a EndpointConfigurationProductionVariantsArrayArgs) ToEndpointConfigurationProductionVariantsArrayOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(EndpointConfigurationProductionVariantsArrayOutput)
}

type EndpointConfigurationProductionVariantsArrayOutput struct { *pulumi.OutputState }

func (o EndpointConfigurationProductionVariantsArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationProductionVariantsOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) EndpointConfigurationProductionVariants {
		return vs[0].([]EndpointConfigurationProductionVariants)[vs[1].(int)]
	}).(EndpointConfigurationProductionVariantsOutput)
}

func (EndpointConfigurationProductionVariantsArrayOutput) ElementType() reflect.Type {
	return endpointConfigurationProductionVariantsArrayType
}

func (o EndpointConfigurationProductionVariantsArrayOutput) ToEndpointConfigurationProductionVariantsArrayOutput() EndpointConfigurationProductionVariantsArrayOutput {
	return o
}

func (o EndpointConfigurationProductionVariantsArrayOutput) ToEndpointConfigurationProductionVariantsArrayOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantsArrayOutput {
	return o
}

func init() { pulumi.RegisterOutputType(EndpointConfigurationProductionVariantsArrayOutput{}) }

