// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Batch Job Definition resource.
// 
// ## retryStrategy
// 
// `retryStrategy` supports the following:
// 
// * `attempts` - (Optional) The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
// 
// ## timeout
// 
// `timeout` supports the following:
// 
// * `attemptDurationSeconds` - (Optional) The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is `60` seconds.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/batch_job_definition.html.markdown.
type JobDefinition struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name of the job definition.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// A valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html)
	// provided as a single valid JSON document. This parameter is required if the `type` parameter is `container`.
	ContainerProperties pulumi.StringOutput `pulumi:"containerProperties"`

	// Specifies the name of the job definition.
	Name pulumi.StringOutput `pulumi:"name"`

	// Specifies the parameter substitution placeholders to set in the job definition.
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`

	// Specifies the retry strategy to use for failed jobs that are submitted with this job definition.
	// Maximum number of `retryStrategy` is `1`.  Defined below.
	RetryStrategy JobDefinitionRetryStrategyOutput `pulumi:"retryStrategy"`

	// The revision of the job definition.
	Revision pulumi.IntOutput `pulumi:"revision"`

	// Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
	Timeout JobDefinitionTimeoutOutput `pulumi:"timeout"`

	// The type of job definition.  Must be `container`
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewJobDefinition registers a new resource with the given unique name, arguments, and options.
func NewJobDefinition(ctx *pulumi.Context,
	name string, args *JobDefinitionArgs, opts ...pulumi.ResourceOption) (*JobDefinition, error) {
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ContainerProperties; i != nil { inputs["containerProperties"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.Parameters; i != nil { inputs["parameters"] = i.ToStringMapOutput() }
		if i := args.RetryStrategy; i != nil { inputs["retryStrategy"] = i.ToJobDefinitionRetryStrategyOutput() }
		if i := args.Timeout; i != nil { inputs["timeout"] = i.ToJobDefinitionTimeoutOutput() }
		if i := args.Type; i != nil { inputs["type"] = i.ToStringOutput() }
	}
	var resource JobDefinition
	err := ctx.RegisterResource("aws:batch/jobDefinition:JobDefinition", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobDefinition gets an existing JobDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobDefinitionState, opts ...pulumi.ResourceOption) (*JobDefinition, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.ContainerProperties; i != nil { inputs["containerProperties"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.Parameters; i != nil { inputs["parameters"] = i.ToStringMapOutput() }
		if i := state.RetryStrategy; i != nil { inputs["retryStrategy"] = i.ToJobDefinitionRetryStrategyOutput() }
		if i := state.Revision; i != nil { inputs["revision"] = i.ToIntOutput() }
		if i := state.Timeout; i != nil { inputs["timeout"] = i.ToJobDefinitionTimeoutOutput() }
		if i := state.Type; i != nil { inputs["type"] = i.ToStringOutput() }
	}
	var resource JobDefinition
	err := ctx.ReadResource("aws:batch/jobDefinition:JobDefinition", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobDefinition resources.
type JobDefinitionState struct {
	// The Amazon Resource Name of the job definition.
	Arn pulumi.StringInput `pulumi:"arn"`
	// A valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html)
	// provided as a single valid JSON document. This parameter is required if the `type` parameter is `container`.
	ContainerProperties pulumi.StringInput `pulumi:"containerProperties"`
	// Specifies the name of the job definition.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the parameter substitution placeholders to set in the job definition.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// Specifies the retry strategy to use for failed jobs that are submitted with this job definition.
	// Maximum number of `retryStrategy` is `1`.  Defined below.
	RetryStrategy JobDefinitionRetryStrategyInput `pulumi:"retryStrategy"`
	// The revision of the job definition.
	Revision pulumi.IntInput `pulumi:"revision"`
	// Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
	Timeout JobDefinitionTimeoutInput `pulumi:"timeout"`
	// The type of job definition.  Must be `container`
	Type pulumi.StringInput `pulumi:"type"`
}

// The set of arguments for constructing a JobDefinition resource.
type JobDefinitionArgs struct {
	// A valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html)
	// provided as a single valid JSON document. This parameter is required if the `type` parameter is `container`.
	ContainerProperties pulumi.StringInput `pulumi:"containerProperties"`
	// Specifies the name of the job definition.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the parameter substitution placeholders to set in the job definition.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// Specifies the retry strategy to use for failed jobs that are submitted with this job definition.
	// Maximum number of `retryStrategy` is `1`.  Defined below.
	RetryStrategy JobDefinitionRetryStrategyInput `pulumi:"retryStrategy"`
	// Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
	Timeout JobDefinitionTimeoutInput `pulumi:"timeout"`
	// The type of job definition.  Must be `container`
	Type pulumi.StringInput `pulumi:"type"`
}
type JobDefinitionRetryStrategy struct {
	Attempts *int `pulumi:"attempts"`
}
var jobDefinitionRetryStrategyType = reflect.TypeOf((*JobDefinitionRetryStrategy)(nil)).Elem()

type JobDefinitionRetryStrategyInput interface {
	pulumi.Input

	ToJobDefinitionRetryStrategyOutput() JobDefinitionRetryStrategyOutput
	ToJobDefinitionRetryStrategyOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyOutput
}

type JobDefinitionRetryStrategyArgs struct {
	Attempts pulumi.IntInput `pulumi:"attempts"`
}

func (JobDefinitionRetryStrategyArgs) ElementType() reflect.Type {
	return jobDefinitionRetryStrategyType
}

func (a JobDefinitionRetryStrategyArgs) ToJobDefinitionRetryStrategyOutput() JobDefinitionRetryStrategyOutput {
	return pulumi.ToOutput(a).(JobDefinitionRetryStrategyOutput)
}

func (a JobDefinitionRetryStrategyArgs) ToJobDefinitionRetryStrategyOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, a).(JobDefinitionRetryStrategyOutput)
}

type JobDefinitionRetryStrategyOutput struct { *pulumi.OutputState }

func (o JobDefinitionRetryStrategyOutput) Attempts() pulumi.IntOutput {
	return o.Apply(func(v JobDefinitionRetryStrategy) int {
		if v.Attempts == nil { return *new(int) } else { return *v.Attempts }
	}).(pulumi.IntOutput)
}

func (JobDefinitionRetryStrategyOutput) ElementType() reflect.Type {
	return jobDefinitionRetryStrategyType
}

func (o JobDefinitionRetryStrategyOutput) ToJobDefinitionRetryStrategyOutput() JobDefinitionRetryStrategyOutput {
	return o
}

func (o JobDefinitionRetryStrategyOutput) ToJobDefinitionRetryStrategyOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyOutput {
	return o
}

func init() { pulumi.RegisterOutputType(JobDefinitionRetryStrategyOutput{}) }

type JobDefinitionTimeout struct {
	AttemptDurationSeconds *int `pulumi:"attemptDurationSeconds"`
}
var jobDefinitionTimeoutType = reflect.TypeOf((*JobDefinitionTimeout)(nil)).Elem()

type JobDefinitionTimeoutInput interface {
	pulumi.Input

	ToJobDefinitionTimeoutOutput() JobDefinitionTimeoutOutput
	ToJobDefinitionTimeoutOutputWithContext(ctx context.Context) JobDefinitionTimeoutOutput
}

type JobDefinitionTimeoutArgs struct {
	AttemptDurationSeconds pulumi.IntInput `pulumi:"attemptDurationSeconds"`
}

func (JobDefinitionTimeoutArgs) ElementType() reflect.Type {
	return jobDefinitionTimeoutType
}

func (a JobDefinitionTimeoutArgs) ToJobDefinitionTimeoutOutput() JobDefinitionTimeoutOutput {
	return pulumi.ToOutput(a).(JobDefinitionTimeoutOutput)
}

func (a JobDefinitionTimeoutArgs) ToJobDefinitionTimeoutOutputWithContext(ctx context.Context) JobDefinitionTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, a).(JobDefinitionTimeoutOutput)
}

type JobDefinitionTimeoutOutput struct { *pulumi.OutputState }

func (o JobDefinitionTimeoutOutput) AttemptDurationSeconds() pulumi.IntOutput {
	return o.Apply(func(v JobDefinitionTimeout) int {
		if v.AttemptDurationSeconds == nil { return *new(int) } else { return *v.AttemptDurationSeconds }
	}).(pulumi.IntOutput)
}

func (JobDefinitionTimeoutOutput) ElementType() reflect.Type {
	return jobDefinitionTimeoutType
}

func (o JobDefinitionTimeoutOutput) ToJobDefinitionTimeoutOutput() JobDefinitionTimeoutOutput {
	return o
}

func (o JobDefinitionTimeoutOutput) ToJobDefinitionTimeoutOutputWithContext(ctx context.Context) JobDefinitionTimeoutOutput {
	return o
}

func init() { pulumi.RegisterOutputType(JobDefinitionTimeoutOutput{}) }

