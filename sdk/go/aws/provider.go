// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The provider type for the aws package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/index.html.markdown.
type Provider struct {
	pulumi.ProviderResourceState
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	inputs := map[string]pulumi.Input{}
	inputs["profile"] = pulumi.Any(getEnvOrDefault(nil, nil, "AWS_PROFILE"))
	inputs["region"] = pulumi.Any(getEnvOrDefault(nil, nil, "AWS_REGION", "AWS_DEFAULT_REGION"))
	if args != nil {
		if i := args.AccessKey; i != nil { inputs["accessKey"] = i.ToStringOutput() }
		if i := args.AllowedAccountIds; i != nil { inputs["allowedAccountIds"] = i.ToStringArrayOutput() }
		if i := args.AssumeRole; i != nil { inputs["assumeRole"] = i.ToProviderAssumeRoleOutput() }
		if i := args.Endpoints; i != nil { inputs["endpoints"] = i.ToProviderEndpointsArrayOutput() }
		if i := args.ForbiddenAccountIds; i != nil { inputs["forbiddenAccountIds"] = i.ToStringArrayOutput() }
		if i := args.IgnoreTagPrefixes; i != nil { inputs["ignoreTagPrefixes"] = i.ToStringArrayOutput() }
		if i := args.IgnoreTags; i != nil { inputs["ignoreTags"] = i.ToStringArrayOutput() }
		if i := args.Insecure; i != nil { inputs["insecure"] = i.ToBoolOutput() }
		if i := args.MaxRetries; i != nil { inputs["maxRetries"] = i.ToIntOutput() }
		if i := args.Profile; i != nil { inputs["profile"] = i.ToStringOutput() }
		if i := args.Region; i != nil { inputs["region"] = i.ToStringOutput() }
		if i := args.S3ForcePathStyle; i != nil { inputs["s3ForcePathStyle"] = i.ToBoolOutput() }
		if i := args.SecretKey; i != nil { inputs["secretKey"] = i.ToStringOutput() }
		if i := args.SharedCredentialsFile; i != nil { inputs["sharedCredentialsFile"] = i.ToStringOutput() }
		if i := args.SkipCredentialsValidation; i != nil { inputs["skipCredentialsValidation"] = i.ToBoolOutput() }
		if i := args.SkipGetEc2Platforms; i != nil { inputs["skipGetEc2Platforms"] = i.ToBoolOutput() }
		if i := args.SkipMetadataApiCheck; i != nil { inputs["skipMetadataApiCheck"] = i.ToBoolOutput() }
		if i := args.SkipRegionValidation; i != nil { inputs["skipRegionValidation"] = i.ToBoolOutput() }
		if i := args.SkipRequestingAccountId; i != nil { inputs["skipRequestingAccountId"] = i.ToBoolOutput() }
		if i := args.Token; i != nil { inputs["token"] = i.ToStringOutput() }
	}
	var resource Provider
	err := ctx.RegisterResource("aws", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// The access key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	AllowedAccountIds pulumi.StringArrayInput `pulumi:"allowedAccountIds"`
	AssumeRole ProviderAssumeRoleInput `pulumi:"assumeRole"`
	Endpoints ProviderEndpointsArrayInput `pulumi:"endpoints"`
	ForbiddenAccountIds pulumi.StringArrayInput `pulumi:"forbiddenAccountIds"`
	// Resource tag key prefixes to ignore across all resources.
	IgnoreTagPrefixes pulumi.StringArrayInput `pulumi:"ignoreTagPrefixes"`
	// Resource tag keys to ignore across all resources.
	IgnoreTags pulumi.StringArrayInput `pulumi:"ignoreTags"`
	// Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`
	Insecure pulumi.BoolInput `pulumi:"insecure"`
	// The maximum number of times an AWS API request is being executed. If the API request still fails, an error is thrown.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// The profile for API operations. If not set, the default profile created with `aws configure` will be used.
	Profile pulumi.StringInput `pulumi:"profile"`
	// The region where AWS operations will take place. Examples are us-east-1, us-west-2, etc.
	Region pulumi.StringInput `pulumi:"region"`
	// Set this to true to force the request to use path-style addressing, i.e., http://s3.amazonaws.com/BUCKET/KEY. By
	// default, the S3 client will use virtual hosted bucket addressing when possible (http://BUCKET.s3.amazonaws.com/KEY).
	// Specific to the Amazon S3 service.
	S3ForcePathStyle pulumi.BoolInput `pulumi:"s3ForcePathStyle"`
	// The secret key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
	// The path to the shared credentials file. If not set this defaults to ~/.aws/credentials.
	SharedCredentialsFile pulumi.StringInput `pulumi:"sharedCredentialsFile"`
	// Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS
	// available/implemented.
	SkipCredentialsValidation pulumi.BoolInput `pulumi:"skipCredentialsValidation"`
	// Skip getting the supported EC2 platforms. Used by users that don't have ec2:DescribeAccountAttributes permissions.
	SkipGetEc2Platforms pulumi.BoolInput `pulumi:"skipGetEc2Platforms"`
	SkipMetadataApiCheck pulumi.BoolInput `pulumi:"skipMetadataApiCheck"`
	// Skip static validation of region name. Used by users of alternative AWS-like APIs or users w/ access to regions that
	// are not public (yet).
	SkipRegionValidation pulumi.BoolInput `pulumi:"skipRegionValidation"`
	// Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.
	SkipRequestingAccountId pulumi.BoolInput `pulumi:"skipRequestingAccountId"`
	// session token. A session token is only required if you are using temporary security credentials.
	Token pulumi.StringInput `pulumi:"token"`
}
type ProviderAssumeRole struct {
	ExternalId *string `pulumi:"externalId"`
	Policy *string `pulumi:"policy"`
	RoleArn *string `pulumi:"roleArn"`
	SessionName *string `pulumi:"sessionName"`
}
var providerAssumeRoleType = reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()

type ProviderAssumeRoleInput interface {
	pulumi.Input

	ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput
	ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput
}

type ProviderAssumeRoleArgs struct {
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	Policy pulumi.StringInput `pulumi:"policy"`
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	SessionName pulumi.StringInput `pulumi:"sessionName"`
}

func (ProviderAssumeRoleArgs) ElementType() reflect.Type {
	return providerAssumeRoleType
}

func (a ProviderAssumeRoleArgs) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return pulumi.ToOutput(a).(ProviderAssumeRoleOutput)
}

func (a ProviderAssumeRoleArgs) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ProviderAssumeRoleOutput)
}

type ProviderAssumeRoleOutput struct { *pulumi.OutputState }

func (o ProviderAssumeRoleOutput) ExternalId() pulumi.StringOutput {
	return o.Apply(func(v ProviderAssumeRole) string {
		if v.ExternalId == nil { return *new(string) } else { return *v.ExternalId }
	}).(pulumi.StringOutput)
}

func (o ProviderAssumeRoleOutput) Policy() pulumi.StringOutput {
	return o.Apply(func(v ProviderAssumeRole) string {
		if v.Policy == nil { return *new(string) } else { return *v.Policy }
	}).(pulumi.StringOutput)
}

func (o ProviderAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.Apply(func(v ProviderAssumeRole) string {
		if v.RoleArn == nil { return *new(string) } else { return *v.RoleArn }
	}).(pulumi.StringOutput)
}

func (o ProviderAssumeRoleOutput) SessionName() pulumi.StringOutput {
	return o.Apply(func(v ProviderAssumeRole) string {
		if v.SessionName == nil { return *new(string) } else { return *v.SessionName }
	}).(pulumi.StringOutput)
}

func (ProviderAssumeRoleOutput) ElementType() reflect.Type {
	return providerAssumeRoleType
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return o
}

func init() { pulumi.RegisterOutputType(ProviderAssumeRoleOutput{}) }

type ProviderEndpoints struct {
	Acm *string `pulumi:"acm"`
	Acmpca *string `pulumi:"acmpca"`
	Amplify *string `pulumi:"amplify"`
	Apigateway *string `pulumi:"apigateway"`
	Applicationautoscaling *string `pulumi:"applicationautoscaling"`
	Applicationinsights *string `pulumi:"applicationinsights"`
	Appmesh *string `pulumi:"appmesh"`
	Appstream *string `pulumi:"appstream"`
	Appsync *string `pulumi:"appsync"`
	Athena *string `pulumi:"athena"`
	Autoscaling *string `pulumi:"autoscaling"`
	Autoscalingplans *string `pulumi:"autoscalingplans"`
	Backup *string `pulumi:"backup"`
	Batch *string `pulumi:"batch"`
	Budgets *string `pulumi:"budgets"`
	Cloud9 *string `pulumi:"cloud9"`
	Cloudformation *string `pulumi:"cloudformation"`
	Cloudfront *string `pulumi:"cloudfront"`
	Cloudhsm *string `pulumi:"cloudhsm"`
	Cloudsearch *string `pulumi:"cloudsearch"`
	Cloudtrail *string `pulumi:"cloudtrail"`
	Cloudwatch *string `pulumi:"cloudwatch"`
	Cloudwatchevents *string `pulumi:"cloudwatchevents"`
	Cloudwatchlogs *string `pulumi:"cloudwatchlogs"`
	Codebuild *string `pulumi:"codebuild"`
	Codecommit *string `pulumi:"codecommit"`
	Codedeploy *string `pulumi:"codedeploy"`
	Codepipeline *string `pulumi:"codepipeline"`
	Cognitoidentity *string `pulumi:"cognitoidentity"`
	Cognitoidp *string `pulumi:"cognitoidp"`
	Configservice *string `pulumi:"configservice"`
	Cur *string `pulumi:"cur"`
	Datapipeline *string `pulumi:"datapipeline"`
	Datasync *string `pulumi:"datasync"`
	Dax *string `pulumi:"dax"`
	Devicefarm *string `pulumi:"devicefarm"`
	Directconnect *string `pulumi:"directconnect"`
	Dlm *string `pulumi:"dlm"`
	Dms *string `pulumi:"dms"`
	Docdb *string `pulumi:"docdb"`
	Ds *string `pulumi:"ds"`
	Dynamodb *string `pulumi:"dynamodb"`
	Ec2 *string `pulumi:"ec2"`
	Ecr *string `pulumi:"ecr"`
	Ecs *string `pulumi:"ecs"`
	Efs *string `pulumi:"efs"`
	Eks *string `pulumi:"eks"`
	Elasticache *string `pulumi:"elasticache"`
	Elasticbeanstalk *string `pulumi:"elasticbeanstalk"`
	Elastictranscoder *string `pulumi:"elastictranscoder"`
	Elb *string `pulumi:"elb"`
	Emr *string `pulumi:"emr"`
	Es *string `pulumi:"es"`
	Firehose *string `pulumi:"firehose"`
	Fms *string `pulumi:"fms"`
	Forecast *string `pulumi:"forecast"`
	Fsx *string `pulumi:"fsx"`
	Gamelift *string `pulumi:"gamelift"`
	Glacier *string `pulumi:"glacier"`
	Globalaccelerator *string `pulumi:"globalaccelerator"`
	Glue *string `pulumi:"glue"`
	Greengrass *string `pulumi:"greengrass"`
	Guardduty *string `pulumi:"guardduty"`
	Iam *string `pulumi:"iam"`
	Inspector *string `pulumi:"inspector"`
	Iot *string `pulumi:"iot"`
	Iotanalytics *string `pulumi:"iotanalytics"`
	Iotevents *string `pulumi:"iotevents"`
	Kafka *string `pulumi:"kafka"`
	Kinesis *string `pulumi:"kinesis"`
	KinesisAnalytics *string `pulumi:"kinesisAnalytics"`
	Kinesisanalytics *string `pulumi:"kinesisanalytics"`
	Kinesisvideo *string `pulumi:"kinesisvideo"`
	Kms *string `pulumi:"kms"`
	Lakeformation *string `pulumi:"lakeformation"`
	Lambda *string `pulumi:"lambda"`
	Lexmodels *string `pulumi:"lexmodels"`
	Licensemanager *string `pulumi:"licensemanager"`
	Lightsail *string `pulumi:"lightsail"`
	Macie *string `pulumi:"macie"`
	Managedblockchain *string `pulumi:"managedblockchain"`
	Mediaconnect *string `pulumi:"mediaconnect"`
	Mediaconvert *string `pulumi:"mediaconvert"`
	Medialive *string `pulumi:"medialive"`
	Mediapackage *string `pulumi:"mediapackage"`
	Mediastore *string `pulumi:"mediastore"`
	Mediastoredata *string `pulumi:"mediastoredata"`
	Mq *string `pulumi:"mq"`
	Neptune *string `pulumi:"neptune"`
	Opsworks *string `pulumi:"opsworks"`
	Organizations *string `pulumi:"organizations"`
	Personalize *string `pulumi:"personalize"`
	Pinpoint *string `pulumi:"pinpoint"`
	Pricing *string `pulumi:"pricing"`
	Qldb *string `pulumi:"qldb"`
	Quicksight *string `pulumi:"quicksight"`
	R53 *string `pulumi:"r53"`
	Ram *string `pulumi:"ram"`
	Rds *string `pulumi:"rds"`
	Redshift *string `pulumi:"redshift"`
	Resourcegroups *string `pulumi:"resourcegroups"`
	Route53 *string `pulumi:"route53"`
	Route53resolver *string `pulumi:"route53resolver"`
	S3 *string `pulumi:"s3"`
	S3control *string `pulumi:"s3control"`
	Sagemaker *string `pulumi:"sagemaker"`
	Sdb *string `pulumi:"sdb"`
	Secretsmanager *string `pulumi:"secretsmanager"`
	Securityhub *string `pulumi:"securityhub"`
	Serverlessrepo *string `pulumi:"serverlessrepo"`
	Servicecatalog *string `pulumi:"servicecatalog"`
	Servicediscovery *string `pulumi:"servicediscovery"`
	Servicequotas *string `pulumi:"servicequotas"`
	Ses *string `pulumi:"ses"`
	Shield *string `pulumi:"shield"`
	Sns *string `pulumi:"sns"`
	Sqs *string `pulumi:"sqs"`
	Ssm *string `pulumi:"ssm"`
	Stepfunctions *string `pulumi:"stepfunctions"`
	Storagegateway *string `pulumi:"storagegateway"`
	Sts *string `pulumi:"sts"`
	Swf *string `pulumi:"swf"`
	Transfer *string `pulumi:"transfer"`
	Waf *string `pulumi:"waf"`
	Wafregional *string `pulumi:"wafregional"`
	Worklink *string `pulumi:"worklink"`
	Workspaces *string `pulumi:"workspaces"`
	Xray *string `pulumi:"xray"`
}
var providerEndpointsType = reflect.TypeOf((*ProviderEndpoints)(nil)).Elem()

type ProviderEndpointsInput interface {
	pulumi.Input

	ToProviderEndpointsOutput() ProviderEndpointsOutput
	ToProviderEndpointsOutputWithContext(ctx context.Context) ProviderEndpointsOutput
}

type ProviderEndpointsArgs struct {
	Acm pulumi.StringInput `pulumi:"acm"`
	Acmpca pulumi.StringInput `pulumi:"acmpca"`
	Amplify pulumi.StringInput `pulumi:"amplify"`
	Apigateway pulumi.StringInput `pulumi:"apigateway"`
	Applicationautoscaling pulumi.StringInput `pulumi:"applicationautoscaling"`
	Applicationinsights pulumi.StringInput `pulumi:"applicationinsights"`
	Appmesh pulumi.StringInput `pulumi:"appmesh"`
	Appstream pulumi.StringInput `pulumi:"appstream"`
	Appsync pulumi.StringInput `pulumi:"appsync"`
	Athena pulumi.StringInput `pulumi:"athena"`
	Autoscaling pulumi.StringInput `pulumi:"autoscaling"`
	Autoscalingplans pulumi.StringInput `pulumi:"autoscalingplans"`
	Backup pulumi.StringInput `pulumi:"backup"`
	Batch pulumi.StringInput `pulumi:"batch"`
	Budgets pulumi.StringInput `pulumi:"budgets"`
	Cloud9 pulumi.StringInput `pulumi:"cloud9"`
	Cloudformation pulumi.StringInput `pulumi:"cloudformation"`
	Cloudfront pulumi.StringInput `pulumi:"cloudfront"`
	Cloudhsm pulumi.StringInput `pulumi:"cloudhsm"`
	Cloudsearch pulumi.StringInput `pulumi:"cloudsearch"`
	Cloudtrail pulumi.StringInput `pulumi:"cloudtrail"`
	Cloudwatch pulumi.StringInput `pulumi:"cloudwatch"`
	Cloudwatchevents pulumi.StringInput `pulumi:"cloudwatchevents"`
	Cloudwatchlogs pulumi.StringInput `pulumi:"cloudwatchlogs"`
	Codebuild pulumi.StringInput `pulumi:"codebuild"`
	Codecommit pulumi.StringInput `pulumi:"codecommit"`
	Codedeploy pulumi.StringInput `pulumi:"codedeploy"`
	Codepipeline pulumi.StringInput `pulumi:"codepipeline"`
	Cognitoidentity pulumi.StringInput `pulumi:"cognitoidentity"`
	Cognitoidp pulumi.StringInput `pulumi:"cognitoidp"`
	Configservice pulumi.StringInput `pulumi:"configservice"`
	Cur pulumi.StringInput `pulumi:"cur"`
	Datapipeline pulumi.StringInput `pulumi:"datapipeline"`
	Datasync pulumi.StringInput `pulumi:"datasync"`
	Dax pulumi.StringInput `pulumi:"dax"`
	Devicefarm pulumi.StringInput `pulumi:"devicefarm"`
	Directconnect pulumi.StringInput `pulumi:"directconnect"`
	Dlm pulumi.StringInput `pulumi:"dlm"`
	Dms pulumi.StringInput `pulumi:"dms"`
	Docdb pulumi.StringInput `pulumi:"docdb"`
	Ds pulumi.StringInput `pulumi:"ds"`
	Dynamodb pulumi.StringInput `pulumi:"dynamodb"`
	Ec2 pulumi.StringInput `pulumi:"ec2"`
	Ecr pulumi.StringInput `pulumi:"ecr"`
	Ecs pulumi.StringInput `pulumi:"ecs"`
	Efs pulumi.StringInput `pulumi:"efs"`
	Eks pulumi.StringInput `pulumi:"eks"`
	Elasticache pulumi.StringInput `pulumi:"elasticache"`
	Elasticbeanstalk pulumi.StringInput `pulumi:"elasticbeanstalk"`
	Elastictranscoder pulumi.StringInput `pulumi:"elastictranscoder"`
	Elb pulumi.StringInput `pulumi:"elb"`
	Emr pulumi.StringInput `pulumi:"emr"`
	Es pulumi.StringInput `pulumi:"es"`
	Firehose pulumi.StringInput `pulumi:"firehose"`
	Fms pulumi.StringInput `pulumi:"fms"`
	Forecast pulumi.StringInput `pulumi:"forecast"`
	Fsx pulumi.StringInput `pulumi:"fsx"`
	Gamelift pulumi.StringInput `pulumi:"gamelift"`
	Glacier pulumi.StringInput `pulumi:"glacier"`
	Globalaccelerator pulumi.StringInput `pulumi:"globalaccelerator"`
	Glue pulumi.StringInput `pulumi:"glue"`
	Greengrass pulumi.StringInput `pulumi:"greengrass"`
	Guardduty pulumi.StringInput `pulumi:"guardduty"`
	Iam pulumi.StringInput `pulumi:"iam"`
	Inspector pulumi.StringInput `pulumi:"inspector"`
	Iot pulumi.StringInput `pulumi:"iot"`
	Iotanalytics pulumi.StringInput `pulumi:"iotanalytics"`
	Iotevents pulumi.StringInput `pulumi:"iotevents"`
	Kafka pulumi.StringInput `pulumi:"kafka"`
	Kinesis pulumi.StringInput `pulumi:"kinesis"`
	KinesisAnalytics pulumi.StringInput `pulumi:"kinesisAnalytics"`
	Kinesisanalytics pulumi.StringInput `pulumi:"kinesisanalytics"`
	Kinesisvideo pulumi.StringInput `pulumi:"kinesisvideo"`
	Kms pulumi.StringInput `pulumi:"kms"`
	Lakeformation pulumi.StringInput `pulumi:"lakeformation"`
	Lambda pulumi.StringInput `pulumi:"lambda"`
	Lexmodels pulumi.StringInput `pulumi:"lexmodels"`
	Licensemanager pulumi.StringInput `pulumi:"licensemanager"`
	Lightsail pulumi.StringInput `pulumi:"lightsail"`
	Macie pulumi.StringInput `pulumi:"macie"`
	Managedblockchain pulumi.StringInput `pulumi:"managedblockchain"`
	Mediaconnect pulumi.StringInput `pulumi:"mediaconnect"`
	Mediaconvert pulumi.StringInput `pulumi:"mediaconvert"`
	Medialive pulumi.StringInput `pulumi:"medialive"`
	Mediapackage pulumi.StringInput `pulumi:"mediapackage"`
	Mediastore pulumi.StringInput `pulumi:"mediastore"`
	Mediastoredata pulumi.StringInput `pulumi:"mediastoredata"`
	Mq pulumi.StringInput `pulumi:"mq"`
	Neptune pulumi.StringInput `pulumi:"neptune"`
	Opsworks pulumi.StringInput `pulumi:"opsworks"`
	Organizations pulumi.StringInput `pulumi:"organizations"`
	Personalize pulumi.StringInput `pulumi:"personalize"`
	Pinpoint pulumi.StringInput `pulumi:"pinpoint"`
	Pricing pulumi.StringInput `pulumi:"pricing"`
	Qldb pulumi.StringInput `pulumi:"qldb"`
	Quicksight pulumi.StringInput `pulumi:"quicksight"`
	R53 pulumi.StringInput `pulumi:"r53"`
	Ram pulumi.StringInput `pulumi:"ram"`
	Rds pulumi.StringInput `pulumi:"rds"`
	Redshift pulumi.StringInput `pulumi:"redshift"`
	Resourcegroups pulumi.StringInput `pulumi:"resourcegroups"`
	Route53 pulumi.StringInput `pulumi:"route53"`
	Route53resolver pulumi.StringInput `pulumi:"route53resolver"`
	S3 pulumi.StringInput `pulumi:"s3"`
	S3control pulumi.StringInput `pulumi:"s3control"`
	Sagemaker pulumi.StringInput `pulumi:"sagemaker"`
	Sdb pulumi.StringInput `pulumi:"sdb"`
	Secretsmanager pulumi.StringInput `pulumi:"secretsmanager"`
	Securityhub pulumi.StringInput `pulumi:"securityhub"`
	Serverlessrepo pulumi.StringInput `pulumi:"serverlessrepo"`
	Servicecatalog pulumi.StringInput `pulumi:"servicecatalog"`
	Servicediscovery pulumi.StringInput `pulumi:"servicediscovery"`
	Servicequotas pulumi.StringInput `pulumi:"servicequotas"`
	Ses pulumi.StringInput `pulumi:"ses"`
	Shield pulumi.StringInput `pulumi:"shield"`
	Sns pulumi.StringInput `pulumi:"sns"`
	Sqs pulumi.StringInput `pulumi:"sqs"`
	Ssm pulumi.StringInput `pulumi:"ssm"`
	Stepfunctions pulumi.StringInput `pulumi:"stepfunctions"`
	Storagegateway pulumi.StringInput `pulumi:"storagegateway"`
	Sts pulumi.StringInput `pulumi:"sts"`
	Swf pulumi.StringInput `pulumi:"swf"`
	Transfer pulumi.StringInput `pulumi:"transfer"`
	Waf pulumi.StringInput `pulumi:"waf"`
	Wafregional pulumi.StringInput `pulumi:"wafregional"`
	Worklink pulumi.StringInput `pulumi:"worklink"`
	Workspaces pulumi.StringInput `pulumi:"workspaces"`
	Xray pulumi.StringInput `pulumi:"xray"`
}

func (ProviderEndpointsArgs) ElementType() reflect.Type {
	return providerEndpointsType
}

func (a ProviderEndpointsArgs) ToProviderEndpointsOutput() ProviderEndpointsOutput {
	return pulumi.ToOutput(a).(ProviderEndpointsOutput)
}

func (a ProviderEndpointsArgs) ToProviderEndpointsOutputWithContext(ctx context.Context) ProviderEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ProviderEndpointsOutput)
}

type ProviderEndpointsOutput struct { *pulumi.OutputState }

func (o ProviderEndpointsOutput) Acm() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Acm == nil { return *new(string) } else { return *v.Acm }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Acmpca() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Acmpca == nil { return *new(string) } else { return *v.Acmpca }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Amplify() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Amplify == nil { return *new(string) } else { return *v.Amplify }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Apigateway() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Apigateway == nil { return *new(string) } else { return *v.Apigateway }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Applicationautoscaling() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Applicationautoscaling == nil { return *new(string) } else { return *v.Applicationautoscaling }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Applicationinsights() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Applicationinsights == nil { return *new(string) } else { return *v.Applicationinsights }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Appmesh() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Appmesh == nil { return *new(string) } else { return *v.Appmesh }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Appstream() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Appstream == nil { return *new(string) } else { return *v.Appstream }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Appsync() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Appsync == nil { return *new(string) } else { return *v.Appsync }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Athena() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Athena == nil { return *new(string) } else { return *v.Athena }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Autoscaling() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Autoscaling == nil { return *new(string) } else { return *v.Autoscaling }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Autoscalingplans() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Autoscalingplans == nil { return *new(string) } else { return *v.Autoscalingplans }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Backup() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Backup == nil { return *new(string) } else { return *v.Backup }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Batch() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Batch == nil { return *new(string) } else { return *v.Batch }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Budgets() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Budgets == nil { return *new(string) } else { return *v.Budgets }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cloud9() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cloud9 == nil { return *new(string) } else { return *v.Cloud9 }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cloudformation() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cloudformation == nil { return *new(string) } else { return *v.Cloudformation }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cloudfront() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cloudfront == nil { return *new(string) } else { return *v.Cloudfront }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cloudhsm() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cloudhsm == nil { return *new(string) } else { return *v.Cloudhsm }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cloudsearch() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cloudsearch == nil { return *new(string) } else { return *v.Cloudsearch }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cloudtrail() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cloudtrail == nil { return *new(string) } else { return *v.Cloudtrail }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cloudwatch() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cloudwatch == nil { return *new(string) } else { return *v.Cloudwatch }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cloudwatchevents() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cloudwatchevents == nil { return *new(string) } else { return *v.Cloudwatchevents }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cloudwatchlogs() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cloudwatchlogs == nil { return *new(string) } else { return *v.Cloudwatchlogs }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Codebuild() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Codebuild == nil { return *new(string) } else { return *v.Codebuild }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Codecommit() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Codecommit == nil { return *new(string) } else { return *v.Codecommit }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Codedeploy() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Codedeploy == nil { return *new(string) } else { return *v.Codedeploy }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Codepipeline() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Codepipeline == nil { return *new(string) } else { return *v.Codepipeline }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cognitoidentity() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cognitoidentity == nil { return *new(string) } else { return *v.Cognitoidentity }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cognitoidp() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cognitoidp == nil { return *new(string) } else { return *v.Cognitoidp }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Configservice() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Configservice == nil { return *new(string) } else { return *v.Configservice }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Cur() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Cur == nil { return *new(string) } else { return *v.Cur }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Datapipeline() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Datapipeline == nil { return *new(string) } else { return *v.Datapipeline }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Datasync() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Datasync == nil { return *new(string) } else { return *v.Datasync }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Dax() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Dax == nil { return *new(string) } else { return *v.Dax }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Devicefarm() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Devicefarm == nil { return *new(string) } else { return *v.Devicefarm }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Directconnect() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Directconnect == nil { return *new(string) } else { return *v.Directconnect }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Dlm() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Dlm == nil { return *new(string) } else { return *v.Dlm }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Dms() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Dms == nil { return *new(string) } else { return *v.Dms }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Docdb() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Docdb == nil { return *new(string) } else { return *v.Docdb }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Ds() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Ds == nil { return *new(string) } else { return *v.Ds }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Dynamodb() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Dynamodb == nil { return *new(string) } else { return *v.Dynamodb }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Ec2() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Ec2 == nil { return *new(string) } else { return *v.Ec2 }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Ecr() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Ecr == nil { return *new(string) } else { return *v.Ecr }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Ecs() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Ecs == nil { return *new(string) } else { return *v.Ecs }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Efs() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Efs == nil { return *new(string) } else { return *v.Efs }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Eks() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Eks == nil { return *new(string) } else { return *v.Eks }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Elasticache() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Elasticache == nil { return *new(string) } else { return *v.Elasticache }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Elasticbeanstalk() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Elasticbeanstalk == nil { return *new(string) } else { return *v.Elasticbeanstalk }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Elastictranscoder() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Elastictranscoder == nil { return *new(string) } else { return *v.Elastictranscoder }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Elb() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Elb == nil { return *new(string) } else { return *v.Elb }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Emr() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Emr == nil { return *new(string) } else { return *v.Emr }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Es() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Es == nil { return *new(string) } else { return *v.Es }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Firehose() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Firehose == nil { return *new(string) } else { return *v.Firehose }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Fms() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Fms == nil { return *new(string) } else { return *v.Fms }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Forecast() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Forecast == nil { return *new(string) } else { return *v.Forecast }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Fsx() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Fsx == nil { return *new(string) } else { return *v.Fsx }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Gamelift() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Gamelift == nil { return *new(string) } else { return *v.Gamelift }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Glacier() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Glacier == nil { return *new(string) } else { return *v.Glacier }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Globalaccelerator() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Globalaccelerator == nil { return *new(string) } else { return *v.Globalaccelerator }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Glue() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Glue == nil { return *new(string) } else { return *v.Glue }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Greengrass() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Greengrass == nil { return *new(string) } else { return *v.Greengrass }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Guardduty() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Guardduty == nil { return *new(string) } else { return *v.Guardduty }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Iam() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Iam == nil { return *new(string) } else { return *v.Iam }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Inspector() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Inspector == nil { return *new(string) } else { return *v.Inspector }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Iot() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Iot == nil { return *new(string) } else { return *v.Iot }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Iotanalytics() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Iotanalytics == nil { return *new(string) } else { return *v.Iotanalytics }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Iotevents() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Iotevents == nil { return *new(string) } else { return *v.Iotevents }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Kafka() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Kafka == nil { return *new(string) } else { return *v.Kafka }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Kinesis() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Kinesis == nil { return *new(string) } else { return *v.Kinesis }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) KinesisAnalytics() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.KinesisAnalytics == nil { return *new(string) } else { return *v.KinesisAnalytics }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Kinesisanalytics() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Kinesisanalytics == nil { return *new(string) } else { return *v.Kinesisanalytics }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Kinesisvideo() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Kinesisvideo == nil { return *new(string) } else { return *v.Kinesisvideo }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Kms() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Kms == nil { return *new(string) } else { return *v.Kms }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Lakeformation() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Lakeformation == nil { return *new(string) } else { return *v.Lakeformation }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Lambda() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Lambda == nil { return *new(string) } else { return *v.Lambda }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Lexmodels() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Lexmodels == nil { return *new(string) } else { return *v.Lexmodels }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Licensemanager() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Licensemanager == nil { return *new(string) } else { return *v.Licensemanager }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Lightsail() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Lightsail == nil { return *new(string) } else { return *v.Lightsail }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Macie() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Macie == nil { return *new(string) } else { return *v.Macie }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Managedblockchain() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Managedblockchain == nil { return *new(string) } else { return *v.Managedblockchain }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Mediaconnect() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Mediaconnect == nil { return *new(string) } else { return *v.Mediaconnect }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Mediaconvert() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Mediaconvert == nil { return *new(string) } else { return *v.Mediaconvert }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Medialive() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Medialive == nil { return *new(string) } else { return *v.Medialive }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Mediapackage() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Mediapackage == nil { return *new(string) } else { return *v.Mediapackage }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Mediastore() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Mediastore == nil { return *new(string) } else { return *v.Mediastore }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Mediastoredata() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Mediastoredata == nil { return *new(string) } else { return *v.Mediastoredata }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Mq() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Mq == nil { return *new(string) } else { return *v.Mq }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Neptune() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Neptune == nil { return *new(string) } else { return *v.Neptune }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Opsworks() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Opsworks == nil { return *new(string) } else { return *v.Opsworks }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Organizations() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Organizations == nil { return *new(string) } else { return *v.Organizations }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Personalize() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Personalize == nil { return *new(string) } else { return *v.Personalize }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Pinpoint() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Pinpoint == nil { return *new(string) } else { return *v.Pinpoint }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Pricing() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Pricing == nil { return *new(string) } else { return *v.Pricing }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Qldb() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Qldb == nil { return *new(string) } else { return *v.Qldb }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Quicksight() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Quicksight == nil { return *new(string) } else { return *v.Quicksight }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) R53() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.R53 == nil { return *new(string) } else { return *v.R53 }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Ram() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Ram == nil { return *new(string) } else { return *v.Ram }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Rds() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Rds == nil { return *new(string) } else { return *v.Rds }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Redshift() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Redshift == nil { return *new(string) } else { return *v.Redshift }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Resourcegroups() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Resourcegroups == nil { return *new(string) } else { return *v.Resourcegroups }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Route53() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Route53 == nil { return *new(string) } else { return *v.Route53 }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Route53resolver() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Route53resolver == nil { return *new(string) } else { return *v.Route53resolver }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) S3() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.S3 == nil { return *new(string) } else { return *v.S3 }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) S3control() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.S3control == nil { return *new(string) } else { return *v.S3control }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Sagemaker() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Sagemaker == nil { return *new(string) } else { return *v.Sagemaker }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Sdb() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Sdb == nil { return *new(string) } else { return *v.Sdb }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Secretsmanager() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Secretsmanager == nil { return *new(string) } else { return *v.Secretsmanager }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Securityhub() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Securityhub == nil { return *new(string) } else { return *v.Securityhub }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Serverlessrepo() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Serverlessrepo == nil { return *new(string) } else { return *v.Serverlessrepo }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Servicecatalog() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Servicecatalog == nil { return *new(string) } else { return *v.Servicecatalog }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Servicediscovery() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Servicediscovery == nil { return *new(string) } else { return *v.Servicediscovery }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Servicequotas() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Servicequotas == nil { return *new(string) } else { return *v.Servicequotas }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Ses() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Ses == nil { return *new(string) } else { return *v.Ses }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Shield() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Shield == nil { return *new(string) } else { return *v.Shield }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Sns() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Sns == nil { return *new(string) } else { return *v.Sns }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Sqs() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Sqs == nil { return *new(string) } else { return *v.Sqs }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Ssm() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Ssm == nil { return *new(string) } else { return *v.Ssm }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Stepfunctions() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Stepfunctions == nil { return *new(string) } else { return *v.Stepfunctions }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Storagegateway() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Storagegateway == nil { return *new(string) } else { return *v.Storagegateway }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Sts() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Sts == nil { return *new(string) } else { return *v.Sts }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Swf() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Swf == nil { return *new(string) } else { return *v.Swf }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Transfer() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Transfer == nil { return *new(string) } else { return *v.Transfer }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Waf() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Waf == nil { return *new(string) } else { return *v.Waf }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Wafregional() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Wafregional == nil { return *new(string) } else { return *v.Wafregional }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Worklink() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Worklink == nil { return *new(string) } else { return *v.Worklink }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Workspaces() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Workspaces == nil { return *new(string) } else { return *v.Workspaces }
	}).(pulumi.StringOutput)
}

func (o ProviderEndpointsOutput) Xray() pulumi.StringOutput {
	return o.Apply(func(v ProviderEndpoints) string {
		if v.Xray == nil { return *new(string) } else { return *v.Xray }
	}).(pulumi.StringOutput)
}

func (ProviderEndpointsOutput) ElementType() reflect.Type {
	return providerEndpointsType
}

func (o ProviderEndpointsOutput) ToProviderEndpointsOutput() ProviderEndpointsOutput {
	return o
}

func (o ProviderEndpointsOutput) ToProviderEndpointsOutputWithContext(ctx context.Context) ProviderEndpointsOutput {
	return o
}

func init() { pulumi.RegisterOutputType(ProviderEndpointsOutput{}) }

var providerEndpointsArrayType = reflect.TypeOf((*[]ProviderEndpoints)(nil)).Elem()

type ProviderEndpointsArrayInput interface {
	pulumi.Input

	ToProviderEndpointsArrayOutput() ProviderEndpointsArrayOutput
	ToProviderEndpointsArrayOutputWithContext(ctx context.Context) ProviderEndpointsArrayOutput
}

type ProviderEndpointsArrayArgs []ProviderEndpointsInput

func (ProviderEndpointsArrayArgs) ElementType() reflect.Type {
	return providerEndpointsArrayType
}

func (a ProviderEndpointsArrayArgs) ToProviderEndpointsArrayOutput() ProviderEndpointsArrayOutput {
	return pulumi.ToOutput(a).(ProviderEndpointsArrayOutput)
}

func (a ProviderEndpointsArrayArgs) ToProviderEndpointsArrayOutputWithContext(ctx context.Context) ProviderEndpointsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(ProviderEndpointsArrayOutput)
}

type ProviderEndpointsArrayOutput struct { *pulumi.OutputState }

func (o ProviderEndpointsArrayOutput) Index(i pulumi.IntInput) ProviderEndpointsOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) ProviderEndpoints {
		return vs[0].([]ProviderEndpoints)[vs[1].(int)]
	}).(ProviderEndpointsOutput)
}

func (ProviderEndpointsArrayOutput) ElementType() reflect.Type {
	return providerEndpointsArrayType
}

func (o ProviderEndpointsArrayOutput) ToProviderEndpointsArrayOutput() ProviderEndpointsArrayOutput {
	return o
}

func (o ProviderEndpointsArrayOutput) ToProviderEndpointsArrayOutputWithContext(ctx context.Context) ProviderEndpointsArrayOutput {
	return o
}

func init() { pulumi.RegisterOutputType(ProviderEndpointsArrayOutput{}) }

