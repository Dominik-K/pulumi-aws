// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an SNS topic resource
// 
// ## Message Delivery Status Arguments
// 
// The `<endpoint>_success_feedback_role_arn` and `<endpoint>_failure_feedback_role_arn` arguments are used to give Amazon SNS write access to use CloudWatch Logs on your behalf. The `<endpoint>_success_feedback_sample_rate` argument is for specifying the sample rate percentage (0-100) of successfully delivered messages. After you configure the  `<endpoint>_failure_feedback_role_arn` argument, then all failed message deliveries generate CloudWatch Logs.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sns_topic.html.markdown.
type Topic struct {
	pulumi.CustomResourceState

	// IAM role for failure feedback
	ApplicationFailureFeedbackRoleArn pulumi.StringOutput `pulumi:"applicationFailureFeedbackRoleArn"`

	// The IAM role permitted to receive success feedback for this topic
	ApplicationSuccessFeedbackRoleArn pulumi.StringOutput `pulumi:"applicationSuccessFeedbackRoleArn"`

	// Percentage of success to sample
	ApplicationSuccessFeedbackSampleRate pulumi.IntOutput `pulumi:"applicationSuccessFeedbackSampleRate"`

	// The ARN of the SNS topic, as a more obvious property (clone of id)
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
	DeliveryPolicy pulumi.StringOutput `pulumi:"deliveryPolicy"`

	// The display name for the SNS topic
	DisplayName pulumi.StringOutput `pulumi:"displayName"`

	// IAM role for failure feedback
	HttpFailureFeedbackRoleArn pulumi.StringOutput `pulumi:"httpFailureFeedbackRoleArn"`

	// The IAM role permitted to receive success feedback for this topic
	HttpSuccessFeedbackRoleArn pulumi.StringOutput `pulumi:"httpSuccessFeedbackRoleArn"`

	// Percentage of success to sample
	HttpSuccessFeedbackSampleRate pulumi.IntOutput `pulumi:"httpSuccessFeedbackSampleRate"`

	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
	KmsMasterKeyId pulumi.StringOutput `pulumi:"kmsMasterKeyId"`

	// IAM role for failure feedback
	LambdaFailureFeedbackRoleArn pulumi.StringOutput `pulumi:"lambdaFailureFeedbackRoleArn"`

	// The IAM role permitted to receive success feedback for this topic
	LambdaSuccessFeedbackRoleArn pulumi.StringOutput `pulumi:"lambdaSuccessFeedbackRoleArn"`

	// Percentage of success to sample
	LambdaSuccessFeedbackSampleRate pulumi.IntOutput `pulumi:"lambdaSuccessFeedbackSampleRate"`

	// The friendly name for the SNS topic. By default generated by this provider.
	Name pulumi.StringOutput `pulumi:"name"`

	// The friendly name for the SNS topic. Conflicts with `name`.
	NamePrefix pulumi.StringOutput `pulumi:"namePrefix"`

	Policy pulumi.StringOutput `pulumi:"policy"`

	// IAM role for failure feedback
	SqsFailureFeedbackRoleArn pulumi.StringOutput `pulumi:"sqsFailureFeedbackRoleArn"`

	// The IAM role permitted to receive success feedback for this topic
	SqsSuccessFeedbackRoleArn pulumi.StringOutput `pulumi:"sqsSuccessFeedbackRoleArn"`

	// Percentage of success to sample
	SqsSuccessFeedbackSampleRate pulumi.IntOutput `pulumi:"sqsSuccessFeedbackSampleRate"`

	// Key-value mapping of resource tags
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewTopic registers a new resource with the given unique name, arguments, and options.
func NewTopic(ctx *pulumi.Context,
	name string, args *TopicArgs, opts ...pulumi.ResourceOption) (*Topic, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ApplicationFailureFeedbackRoleArn; i != nil { inputs["applicationFailureFeedbackRoleArn"] = i.ToStringOutput() }
		if i := args.ApplicationSuccessFeedbackRoleArn; i != nil { inputs["applicationSuccessFeedbackRoleArn"] = i.ToStringOutput() }
		if i := args.ApplicationSuccessFeedbackSampleRate; i != nil { inputs["applicationSuccessFeedbackSampleRate"] = i.ToIntOutput() }
		if i := args.DeliveryPolicy; i != nil { inputs["deliveryPolicy"] = i.ToStringOutput() }
		if i := args.DisplayName; i != nil { inputs["displayName"] = i.ToStringOutput() }
		if i := args.HttpFailureFeedbackRoleArn; i != nil { inputs["httpFailureFeedbackRoleArn"] = i.ToStringOutput() }
		if i := args.HttpSuccessFeedbackRoleArn; i != nil { inputs["httpSuccessFeedbackRoleArn"] = i.ToStringOutput() }
		if i := args.HttpSuccessFeedbackSampleRate; i != nil { inputs["httpSuccessFeedbackSampleRate"] = i.ToIntOutput() }
		if i := args.KmsMasterKeyId; i != nil { inputs["kmsMasterKeyId"] = i.ToStringOutput() }
		if i := args.LambdaFailureFeedbackRoleArn; i != nil { inputs["lambdaFailureFeedbackRoleArn"] = i.ToStringOutput() }
		if i := args.LambdaSuccessFeedbackRoleArn; i != nil { inputs["lambdaSuccessFeedbackRoleArn"] = i.ToStringOutput() }
		if i := args.LambdaSuccessFeedbackSampleRate; i != nil { inputs["lambdaSuccessFeedbackSampleRate"] = i.ToIntOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.NamePrefix; i != nil { inputs["namePrefix"] = i.ToStringOutput() }
		if i := args.Policy; i != nil { inputs["policy"] = i.ToStringOutput() }
		if i := args.SqsFailureFeedbackRoleArn; i != nil { inputs["sqsFailureFeedbackRoleArn"] = i.ToStringOutput() }
		if i := args.SqsSuccessFeedbackRoleArn; i != nil { inputs["sqsSuccessFeedbackRoleArn"] = i.ToStringOutput() }
		if i := args.SqsSuccessFeedbackSampleRate; i != nil { inputs["sqsSuccessFeedbackSampleRate"] = i.ToIntOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource Topic
	err := ctx.RegisterResource("aws:sns/topic:Topic", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTopic gets an existing Topic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TopicState, opts ...pulumi.ResourceOption) (*Topic, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.ApplicationFailureFeedbackRoleArn; i != nil { inputs["applicationFailureFeedbackRoleArn"] = i.ToStringOutput() }
		if i := state.ApplicationSuccessFeedbackRoleArn; i != nil { inputs["applicationSuccessFeedbackRoleArn"] = i.ToStringOutput() }
		if i := state.ApplicationSuccessFeedbackSampleRate; i != nil { inputs["applicationSuccessFeedbackSampleRate"] = i.ToIntOutput() }
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.DeliveryPolicy; i != nil { inputs["deliveryPolicy"] = i.ToStringOutput() }
		if i := state.DisplayName; i != nil { inputs["displayName"] = i.ToStringOutput() }
		if i := state.HttpFailureFeedbackRoleArn; i != nil { inputs["httpFailureFeedbackRoleArn"] = i.ToStringOutput() }
		if i := state.HttpSuccessFeedbackRoleArn; i != nil { inputs["httpSuccessFeedbackRoleArn"] = i.ToStringOutput() }
		if i := state.HttpSuccessFeedbackSampleRate; i != nil { inputs["httpSuccessFeedbackSampleRate"] = i.ToIntOutput() }
		if i := state.KmsMasterKeyId; i != nil { inputs["kmsMasterKeyId"] = i.ToStringOutput() }
		if i := state.LambdaFailureFeedbackRoleArn; i != nil { inputs["lambdaFailureFeedbackRoleArn"] = i.ToStringOutput() }
		if i := state.LambdaSuccessFeedbackRoleArn; i != nil { inputs["lambdaSuccessFeedbackRoleArn"] = i.ToStringOutput() }
		if i := state.LambdaSuccessFeedbackSampleRate; i != nil { inputs["lambdaSuccessFeedbackSampleRate"] = i.ToIntOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.NamePrefix; i != nil { inputs["namePrefix"] = i.ToStringOutput() }
		if i := state.Policy; i != nil { inputs["policy"] = i.ToStringOutput() }
		if i := state.SqsFailureFeedbackRoleArn; i != nil { inputs["sqsFailureFeedbackRoleArn"] = i.ToStringOutput() }
		if i := state.SqsSuccessFeedbackRoleArn; i != nil { inputs["sqsSuccessFeedbackRoleArn"] = i.ToStringOutput() }
		if i := state.SqsSuccessFeedbackSampleRate; i != nil { inputs["sqsSuccessFeedbackSampleRate"] = i.ToIntOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource Topic
	err := ctx.ReadResource("aws:sns/topic:Topic", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Topic resources.
type TopicState struct {
	// IAM role for failure feedback
	ApplicationFailureFeedbackRoleArn pulumi.StringInput `pulumi:"applicationFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	ApplicationSuccessFeedbackRoleArn pulumi.StringInput `pulumi:"applicationSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	ApplicationSuccessFeedbackSampleRate pulumi.IntInput `pulumi:"applicationSuccessFeedbackSampleRate"`
	// The ARN of the SNS topic, as a more obvious property (clone of id)
	Arn pulumi.StringInput `pulumi:"arn"`
	// The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
	DeliveryPolicy pulumi.StringInput `pulumi:"deliveryPolicy"`
	// The display name for the SNS topic
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// IAM role for failure feedback
	HttpFailureFeedbackRoleArn pulumi.StringInput `pulumi:"httpFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	HttpSuccessFeedbackRoleArn pulumi.StringInput `pulumi:"httpSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	HttpSuccessFeedbackSampleRate pulumi.IntInput `pulumi:"httpSuccessFeedbackSampleRate"`
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
	KmsMasterKeyId pulumi.StringInput `pulumi:"kmsMasterKeyId"`
	// IAM role for failure feedback
	LambdaFailureFeedbackRoleArn pulumi.StringInput `pulumi:"lambdaFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	LambdaSuccessFeedbackRoleArn pulumi.StringInput `pulumi:"lambdaSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	LambdaSuccessFeedbackSampleRate pulumi.IntInput `pulumi:"lambdaSuccessFeedbackSampleRate"`
	// The friendly name for the SNS topic. By default generated by this provider.
	Name pulumi.StringInput `pulumi:"name"`
	// The friendly name for the SNS topic. Conflicts with `name`.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	Policy pulumi.StringInput `pulumi:"policy"`
	// IAM role for failure feedback
	SqsFailureFeedbackRoleArn pulumi.StringInput `pulumi:"sqsFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	SqsSuccessFeedbackRoleArn pulumi.StringInput `pulumi:"sqsSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	SqsSuccessFeedbackSampleRate pulumi.IntInput `pulumi:"sqsSuccessFeedbackSampleRate"`
	// Key-value mapping of resource tags
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a Topic resource.
type TopicArgs struct {
	// IAM role for failure feedback
	ApplicationFailureFeedbackRoleArn pulumi.StringInput `pulumi:"applicationFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	ApplicationSuccessFeedbackRoleArn pulumi.StringInput `pulumi:"applicationSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	ApplicationSuccessFeedbackSampleRate pulumi.IntInput `pulumi:"applicationSuccessFeedbackSampleRate"`
	// The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
	DeliveryPolicy pulumi.StringInput `pulumi:"deliveryPolicy"`
	// The display name for the SNS topic
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// IAM role for failure feedback
	HttpFailureFeedbackRoleArn pulumi.StringInput `pulumi:"httpFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	HttpSuccessFeedbackRoleArn pulumi.StringInput `pulumi:"httpSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	HttpSuccessFeedbackSampleRate pulumi.IntInput `pulumi:"httpSuccessFeedbackSampleRate"`
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
	KmsMasterKeyId pulumi.StringInput `pulumi:"kmsMasterKeyId"`
	// IAM role for failure feedback
	LambdaFailureFeedbackRoleArn pulumi.StringInput `pulumi:"lambdaFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	LambdaSuccessFeedbackRoleArn pulumi.StringInput `pulumi:"lambdaSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	LambdaSuccessFeedbackSampleRate pulumi.IntInput `pulumi:"lambdaSuccessFeedbackSampleRate"`
	// The friendly name for the SNS topic. By default generated by this provider.
	Name pulumi.StringInput `pulumi:"name"`
	// The friendly name for the SNS topic. Conflicts with `name`.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	Policy pulumi.StringInput `pulumi:"policy"`
	// IAM role for failure feedback
	SqsFailureFeedbackRoleArn pulumi.StringInput `pulumi:"sqsFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	SqsSuccessFeedbackRoleArn pulumi.StringInput `pulumi:"sqsSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	SqsSuccessFeedbackSampleRate pulumi.IntInput `pulumi:"sqsSuccessFeedbackSampleRate"`
	// Key-value mapping of resource tags
	Tags pulumi.MapInput `pulumi:"tags"`
}
