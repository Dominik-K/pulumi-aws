// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Pinpoint APNs VoIP Sandbox Channel resource.
// 
// > **Note:** All arguments, including certificates and tokens, will be stored in the raw state as plain-text.
// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/pinpoint_apns_voip_sandbox_channel.html.markdown.
type ApnsVoipSandboxChannel struct {
	pulumi.CustomResourceState

	// The application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`

	// The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.
	BundleId pulumi.StringOutput `pulumi:"bundleId"`

	// The pem encoded TLS Certificate from Apple.
	Certificate pulumi.StringOutput `pulumi:"certificate"`

	// The default authentication method used for APNs. 
	// __NOTE__: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
	// You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
	// If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
	DefaultAuthenticationMethod pulumi.StringOutput `pulumi:"defaultAuthenticationMethod"`

	// Whether the channel is enabled or disabled. Defaults to `true`.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`

	// The Certificate Private Key file (ie. `.key` file).
	PrivateKey pulumi.StringOutput `pulumi:"privateKey"`

	// The ID assigned to your Apple developer account team. This value is provided on the Membership page.
	TeamId pulumi.StringOutput `pulumi:"teamId"`

	// The `.p8` file that you download from your Apple developer account when you create an authentication key. 
	TokenKey pulumi.StringOutput `pulumi:"tokenKey"`

	// The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.
	TokenKeyId pulumi.StringOutput `pulumi:"tokenKeyId"`
}

// NewApnsVoipSandboxChannel registers a new resource with the given unique name, arguments, and options.
func NewApnsVoipSandboxChannel(ctx *pulumi.Context,
	name string, args *ApnsVoipSandboxChannelArgs, opts ...pulumi.ResourceOption) (*ApnsVoipSandboxChannel, error) {
	if args == nil || args.ApplicationId == nil {
		return nil, errors.New("missing required argument 'ApplicationId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ApplicationId; i != nil { inputs["applicationId"] = i.ToStringOutput() }
		if i := args.BundleId; i != nil { inputs["bundleId"] = i.ToStringOutput() }
		if i := args.Certificate; i != nil { inputs["certificate"] = i.ToStringOutput() }
		if i := args.DefaultAuthenticationMethod; i != nil { inputs["defaultAuthenticationMethod"] = i.ToStringOutput() }
		if i := args.Enabled; i != nil { inputs["enabled"] = i.ToBoolOutput() }
		if i := args.PrivateKey; i != nil { inputs["privateKey"] = i.ToStringOutput() }
		if i := args.TeamId; i != nil { inputs["teamId"] = i.ToStringOutput() }
		if i := args.TokenKey; i != nil { inputs["tokenKey"] = i.ToStringOutput() }
		if i := args.TokenKeyId; i != nil { inputs["tokenKeyId"] = i.ToStringOutput() }
	}
	var resource ApnsVoipSandboxChannel
	err := ctx.RegisterResource("aws:pinpoint/apnsVoipSandboxChannel:ApnsVoipSandboxChannel", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApnsVoipSandboxChannel gets an existing ApnsVoipSandboxChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApnsVoipSandboxChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApnsVoipSandboxChannelState, opts ...pulumi.ResourceOption) (*ApnsVoipSandboxChannel, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.ApplicationId; i != nil { inputs["applicationId"] = i.ToStringOutput() }
		if i := state.BundleId; i != nil { inputs["bundleId"] = i.ToStringOutput() }
		if i := state.Certificate; i != nil { inputs["certificate"] = i.ToStringOutput() }
		if i := state.DefaultAuthenticationMethod; i != nil { inputs["defaultAuthenticationMethod"] = i.ToStringOutput() }
		if i := state.Enabled; i != nil { inputs["enabled"] = i.ToBoolOutput() }
		if i := state.PrivateKey; i != nil { inputs["privateKey"] = i.ToStringOutput() }
		if i := state.TeamId; i != nil { inputs["teamId"] = i.ToStringOutput() }
		if i := state.TokenKey; i != nil { inputs["tokenKey"] = i.ToStringOutput() }
		if i := state.TokenKeyId; i != nil { inputs["tokenKeyId"] = i.ToStringOutput() }
	}
	var resource ApnsVoipSandboxChannel
	err := ctx.ReadResource("aws:pinpoint/apnsVoipSandboxChannel:ApnsVoipSandboxChannel", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApnsVoipSandboxChannel resources.
type ApnsVoipSandboxChannelState struct {
	// The application ID.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.
	BundleId pulumi.StringInput `pulumi:"bundleId"`
	// The pem encoded TLS Certificate from Apple.
	Certificate pulumi.StringInput `pulumi:"certificate"`
	// The default authentication method used for APNs. 
	// __NOTE__: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
	// You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
	// If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
	DefaultAuthenticationMethod pulumi.StringInput `pulumi:"defaultAuthenticationMethod"`
	// Whether the channel is enabled or disabled. Defaults to `true`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Certificate Private Key file (ie. `.key` file).
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
	// The ID assigned to your Apple developer account team. This value is provided on the Membership page.
	TeamId pulumi.StringInput `pulumi:"teamId"`
	// The `.p8` file that you download from your Apple developer account when you create an authentication key. 
	TokenKey pulumi.StringInput `pulumi:"tokenKey"`
	// The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.
	TokenKeyId pulumi.StringInput `pulumi:"tokenKeyId"`
}

// The set of arguments for constructing a ApnsVoipSandboxChannel resource.
type ApnsVoipSandboxChannelArgs struct {
	// The application ID.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.
	BundleId pulumi.StringInput `pulumi:"bundleId"`
	// The pem encoded TLS Certificate from Apple.
	Certificate pulumi.StringInput `pulumi:"certificate"`
	// The default authentication method used for APNs. 
	// __NOTE__: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
	// You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
	// If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
	DefaultAuthenticationMethod pulumi.StringInput `pulumi:"defaultAuthenticationMethod"`
	// Whether the channel is enabled or disabled. Defaults to `true`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Certificate Private Key file (ie. `.key` file).
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
	// The ID assigned to your Apple developer account team. This value is provided on the Membership page.
	TeamId pulumi.StringInput `pulumi:"teamId"`
	// The `.p8` file that you download from your Apple developer account when you create an authentication key. 
	TokenKey pulumi.StringInput `pulumi:"tokenKey"`
	// The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.
	TokenKeyId pulumi.StringInput `pulumi:"tokenKeyId"`
}
