// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Pinpoint SMS Channel resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/pinpoint_sms_channel.html.markdown.
type SmsChannel struct {
	pulumi.CustomResourceState

	// The application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`

	// Whether the channel is enabled or disabled. Defaults to `true`.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`

	// Promotional messages per second that can be sent.
	PromotionalMessagesPerSecond pulumi.IntOutput `pulumi:"promotionalMessagesPerSecond"`

	// Sender identifier of your messages.
	SenderId pulumi.StringOutput `pulumi:"senderId"`

	// The Short Code registered with the phone provider.
	ShortCode pulumi.StringOutput `pulumi:"shortCode"`

	// Transactional messages per second that can be sent.
	TransactionalMessagesPerSecond pulumi.IntOutput `pulumi:"transactionalMessagesPerSecond"`
}

// NewSmsChannel registers a new resource with the given unique name, arguments, and options.
func NewSmsChannel(ctx *pulumi.Context,
	name string, args *SmsChannelArgs, opts ...pulumi.ResourceOption) (*SmsChannel, error) {
	if args == nil || args.ApplicationId == nil {
		return nil, errors.New("missing required argument 'ApplicationId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ApplicationId; i != nil { inputs["applicationId"] = i.ToStringOutput() }
		if i := args.Enabled; i != nil { inputs["enabled"] = i.ToBoolOutput() }
		if i := args.SenderId; i != nil { inputs["senderId"] = i.ToStringOutput() }
		if i := args.ShortCode; i != nil { inputs["shortCode"] = i.ToStringOutput() }
	}
	var resource SmsChannel
	err := ctx.RegisterResource("aws:pinpoint/smsChannel:SmsChannel", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSmsChannel gets an existing SmsChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSmsChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SmsChannelState, opts ...pulumi.ResourceOption) (*SmsChannel, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.ApplicationId; i != nil { inputs["applicationId"] = i.ToStringOutput() }
		if i := state.Enabled; i != nil { inputs["enabled"] = i.ToBoolOutput() }
		if i := state.PromotionalMessagesPerSecond; i != nil { inputs["promotionalMessagesPerSecond"] = i.ToIntOutput() }
		if i := state.SenderId; i != nil { inputs["senderId"] = i.ToStringOutput() }
		if i := state.ShortCode; i != nil { inputs["shortCode"] = i.ToStringOutput() }
		if i := state.TransactionalMessagesPerSecond; i != nil { inputs["transactionalMessagesPerSecond"] = i.ToIntOutput() }
	}
	var resource SmsChannel
	err := ctx.ReadResource("aws:pinpoint/smsChannel:SmsChannel", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SmsChannel resources.
type SmsChannelState struct {
	// The application ID.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Whether the channel is enabled or disabled. Defaults to `true`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Promotional messages per second that can be sent.
	PromotionalMessagesPerSecond pulumi.IntInput `pulumi:"promotionalMessagesPerSecond"`
	// Sender identifier of your messages.
	SenderId pulumi.StringInput `pulumi:"senderId"`
	// The Short Code registered with the phone provider.
	ShortCode pulumi.StringInput `pulumi:"shortCode"`
	// Transactional messages per second that can be sent.
	TransactionalMessagesPerSecond pulumi.IntInput `pulumi:"transactionalMessagesPerSecond"`
}

// The set of arguments for constructing a SmsChannel resource.
type SmsChannelArgs struct {
	// The application ID.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Whether the channel is enabled or disabled. Defaults to `true`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Sender identifier of your messages.
	SenderId pulumi.StringInput `pulumi:"senderId"`
	// The Short Code registered with the phone provider.
	ShortCode pulumi.StringInput `pulumi:"shortCode"`
}
