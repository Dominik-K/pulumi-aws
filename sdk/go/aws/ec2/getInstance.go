// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get the ID of an Amazon EC2 Instance for use in other
// resources.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/instance.html.markdown.
func LookupInstance(ctx *pulumi.Context, args *GetInstanceArgs, opts ...pulumi.InvokeOption) (*GetInstanceResult, error) {
	var rv GetInstanceResult
	err := ctx.Invoke("aws:ec2/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type GetInstanceArgs struct {
	// One or more name/value pairs to use as filters. There are
	// several valid keys, for a full reference, check out
	// [describe-instances in the AWS CLI reference][1].
	Filters *[]GetInstanceFiltersArgs `pulumi:"filters"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData *bool `pulumi:"getPasswordData"`
	// Retrieve Base64 encoded User Data contents into the `userDataBase64` attribute. A SHA-1 hash of the User Data contents will always be present in the `userData` attribute. Defaults to `false`.
	GetUserData *bool `pulumi:"getUserData"`
	// Specify the exact Instance ID with which to populate the data source.
	InstanceId *string `pulumi:"instanceId"`
	// A mapping of tags, each pair of which must
	// exactly match a pair on the desired Instance.
	InstanceTags *map[string]string `pulumi:"instanceTags"`
	Tags *map[string]string `pulumi:"tags"`
}

// A collection of values returned by getInstance.
type GetInstanceResult struct {
	// The ID of the AMI used to launch the instance.
	Ami string `pulumi:"ami"`
	// The ARN of the instance.
	Arn string `pulumi:"arn"`
	// Whether or not the Instance is associated with a public IP address or not (Boolean).
	AssociatePublicIpAddress bool `pulumi:"associatePublicIpAddress"`
	// The availability zone of the Instance.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The credit specification of the Instance.
	CreditSpecifications []GetInstanceCreditSpecificationsResult `pulumi:"creditSpecifications"`
	DisableApiTermination bool `pulumi:"disableApiTermination"`
	// The EBS block device mappings of the Instance.
	EbsBlockDevices []GetInstanceEbsBlockDevicesResult `pulumi:"ebsBlockDevices"`
	// Whether the Instance is EBS optimized or not (Boolean).
	EbsOptimized bool `pulumi:"ebsOptimized"`
	// The ephemeral block device mappings of the Instance.
	EphemeralBlockDevices []GetInstanceEphemeralBlockDevicesResult `pulumi:"ephemeralBlockDevices"`
	Filters *[]GetInstanceFiltersResult `pulumi:"filters"`
	GetPasswordData *bool `pulumi:"getPasswordData"`
	GetUserData *bool `pulumi:"getUserData"`
	// The Id of the dedicated host the instance will be assigned to.
	HostId string `pulumi:"hostId"`
	// The name of the instance profile associated with the Instance.
	IamInstanceProfile string `pulumi:"iamInstanceProfile"`
	InstanceId *string `pulumi:"instanceId"`
	// The state of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
	InstanceState string `pulumi:"instanceState"`
	InstanceTags map[string]string `pulumi:"instanceTags"`
	// The type of the Instance.
	InstanceType string `pulumi:"instanceType"`
	// The key name of the Instance.
	KeyName string `pulumi:"keyName"`
	// Whether detailed monitoring is enabled or disabled for the Instance (Boolean).
	Monitoring bool `pulumi:"monitoring"`
	// The ID of the network interface that was created with the Instance.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// Base-64 encoded encrypted password data for the instance.
	// Useful for getting the administrator password for instances running Microsoft Windows.
	// This attribute is only exported if `getPasswordData` is true.
	// See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	PasswordData string `pulumi:"passwordData"`
	// The placement group of the Instance.
	PlacementGroup string `pulumi:"placementGroup"`
	// The private DNS name assigned to the Instance. Can only be
	// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
	// for your VPC.
	PrivateDns string `pulumi:"privateDns"`
	// The private IP address assigned to the Instance.
	PrivateIp string `pulumi:"privateIp"`
	// The public DNS name assigned to the Instance. For EC2-VPC, this
	// is only available if you've enabled DNS hostnames for your VPC.
	PublicDns string `pulumi:"publicDns"`
	// The public IP address assigned to the Instance, if applicable. **NOTE**: If you are using an [`ec2.Eip`](https://www.terraform.io/docs/providers/aws/r/eip.html) with your instance, you should refer to the EIP's address directly and not use `publicIp`, as this field will change after the EIP is attached.
	PublicIp string `pulumi:"publicIp"`
	// The root block device mappings of the Instance
	RootBlockDevices []GetInstanceRootBlockDevicesResult `pulumi:"rootBlockDevices"`
	// The associated security groups.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Whether the network interface performs source/destination checking (Boolean).
	SourceDestCheck bool `pulumi:"sourceDestCheck"`
	// The VPC subnet ID.
	SubnetId string `pulumi:"subnetId"`
	// A mapping of tags assigned to the Instance.
	Tags map[string]string `pulumi:"tags"`
	// The tenancy of the instance: `dedicated`, `default`, `host`.
	Tenancy string `pulumi:"tenancy"`
	// SHA-1 hash of User Data supplied to the Instance.
	UserData string `pulumi:"userData"`
	// Base64 encoded contents of User Data supplied to the Instance. Valid UTF-8 contents can be decoded with the [`base64decode` function](https://www.terraform.io/docs/configuration/functions/base64decode.html). This attribute is only exported if `getUserData` is true.
	UserDataBase64 string `pulumi:"userDataBase64"`
	// The associated security groups in a non-default VPC.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}
type GetInstanceCreditSpecificationsResult struct {
	CpuCredits string `pulumi:"cpuCredits"`
}
type GetInstanceEbsBlockDevicesResult struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops int `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The ID of the snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	VolumeId string `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}
type GetInstanceEphemeralBlockDevicesResult struct {
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice *bool `pulumi:"noDevice"`
	// The virtual device name.
	VirtualName *string `pulumi:"virtualName"`
}
type GetInstanceFiltersArgs struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}
type GetInstanceFiltersResult struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}
type GetInstanceRootBlockDevicesResult struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops int `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	VolumeId string `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}
