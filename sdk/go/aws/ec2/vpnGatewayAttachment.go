// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Virtual Private Gateway attachment resource, allowing for an existing
// hardware VPN gateway to be attached and/or detached from a VPC.
// 
// > **Note:** The `ec2.VpnGateway`
// resource can also automatically attach the Virtual Private Gateway it creates
// to an existing VPC by setting the `vpcId` attribute accordingly.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpn_gateway_attachment.html.markdown.
type VpnGatewayAttachment struct {
	pulumi.CustomResourceState

	// The ID of the VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`

	// The ID of the Virtual Private Gateway.
	VpnGatewayId pulumi.StringOutput `pulumi:"vpnGatewayId"`
}

// NewVpnGatewayAttachment registers a new resource with the given unique name, arguments, and options.
func NewVpnGatewayAttachment(ctx *pulumi.Context,
	name string, args *VpnGatewayAttachmentArgs, opts ...pulumi.ResourceOption) (*VpnGatewayAttachment, error) {
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	if args == nil || args.VpnGatewayId == nil {
		return nil, errors.New("missing required argument 'VpnGatewayId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.VpcId; i != nil { inputs["vpcId"] = i.ToStringOutput() }
		if i := args.VpnGatewayId; i != nil { inputs["vpnGatewayId"] = i.ToStringOutput() }
	}
	var resource VpnGatewayAttachment
	err := ctx.RegisterResource("aws:ec2/vpnGatewayAttachment:VpnGatewayAttachment", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnGatewayAttachment gets an existing VpnGatewayAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGatewayAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnGatewayAttachmentState, opts ...pulumi.ResourceOption) (*VpnGatewayAttachment, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.VpcId; i != nil { inputs["vpcId"] = i.ToStringOutput() }
		if i := state.VpnGatewayId; i != nil { inputs["vpnGatewayId"] = i.ToStringOutput() }
	}
	var resource VpnGatewayAttachment
	err := ctx.ReadResource("aws:ec2/vpnGatewayAttachment:VpnGatewayAttachment", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnGatewayAttachment resources.
type VpnGatewayAttachmentState struct {
	// The ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of the Virtual Private Gateway.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

// The set of arguments for constructing a VpnGatewayAttachment resource.
type VpnGatewayAttachmentArgs struct {
	// The ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of the Virtual Private Gateway.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}
