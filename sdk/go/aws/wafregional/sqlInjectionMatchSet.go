// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a WAF Regional SQL Injection Match Set Resource for use with Application Load Balancer.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/wafregional_sql_injection_match_set.html.markdown.
type SqlInjectionMatchSet struct {
	pulumi.CustomResourceState

	// The name or description of the SizeConstraintSet.
	Name pulumi.StringOutput `pulumi:"name"`

	// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
	SqlInjectionMatchTuples SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput `pulumi:"sqlInjectionMatchTuples"`
}

// NewSqlInjectionMatchSet registers a new resource with the given unique name, arguments, and options.
func NewSqlInjectionMatchSet(ctx *pulumi.Context,
	name string, args *SqlInjectionMatchSetArgs, opts ...pulumi.ResourceOption) (*SqlInjectionMatchSet, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.SqlInjectionMatchTuples; i != nil { inputs["sqlInjectionMatchTuples"] = i.ToSqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput() }
	}
	var resource SqlInjectionMatchSet
	err := ctx.RegisterResource("aws:wafregional/sqlInjectionMatchSet:SqlInjectionMatchSet", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlInjectionMatchSet gets an existing SqlInjectionMatchSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlInjectionMatchSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlInjectionMatchSetState, opts ...pulumi.ResourceOption) (*SqlInjectionMatchSet, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.SqlInjectionMatchTuples; i != nil { inputs["sqlInjectionMatchTuples"] = i.ToSqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput() }
	}
	var resource SqlInjectionMatchSet
	err := ctx.ReadResource("aws:wafregional/sqlInjectionMatchSet:SqlInjectionMatchSet", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlInjectionMatchSet resources.
type SqlInjectionMatchSetState struct {
	// The name or description of the SizeConstraintSet.
	Name pulumi.StringInput `pulumi:"name"`
	// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
	SqlInjectionMatchTuples SqlInjectionMatchSetSqlInjectionMatchTuplesArrayInput `pulumi:"sqlInjectionMatchTuples"`
}

// The set of arguments for constructing a SqlInjectionMatchSet resource.
type SqlInjectionMatchSetArgs struct {
	// The name or description of the SizeConstraintSet.
	Name pulumi.StringInput `pulumi:"name"`
	// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
	SqlInjectionMatchTuples SqlInjectionMatchSetSqlInjectionMatchTuplesArrayInput `pulumi:"sqlInjectionMatchTuples"`
}
type SqlInjectionMatchSetSqlInjectionMatchTuples struct {
	// Specifies where in a web request to look for snippets of malicious SQL code.
	FieldToMatch SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation string `pulumi:"textTransformation"`
}
var sqlInjectionMatchSetSqlInjectionMatchTuplesType = reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTuples)(nil)).Elem()

type SqlInjectionMatchSetSqlInjectionMatchTuplesInput interface {
	pulumi.Input

	ToSqlInjectionMatchSetSqlInjectionMatchTuplesOutput() SqlInjectionMatchSetSqlInjectionMatchTuplesOutput
	ToSqlInjectionMatchSetSqlInjectionMatchTuplesOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTuplesOutput
}

type SqlInjectionMatchSetSqlInjectionMatchTuplesArgs struct {
	// Specifies where in a web request to look for snippets of malicious SQL code.
	FieldToMatch SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchInput `pulumi:"fieldToMatch"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation pulumi.StringInput `pulumi:"textTransformation"`
}

func (SqlInjectionMatchSetSqlInjectionMatchTuplesArgs) ElementType() reflect.Type {
	return sqlInjectionMatchSetSqlInjectionMatchTuplesType
}

func (a SqlInjectionMatchSetSqlInjectionMatchTuplesArgs) ToSqlInjectionMatchSetSqlInjectionMatchTuplesOutput() SqlInjectionMatchSetSqlInjectionMatchTuplesOutput {
	return pulumi.ToOutput(a).(SqlInjectionMatchSetSqlInjectionMatchTuplesOutput)
}

func (a SqlInjectionMatchSetSqlInjectionMatchTuplesArgs) ToSqlInjectionMatchSetSqlInjectionMatchTuplesOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTuplesOutput {
	return pulumi.ToOutputWithContext(ctx, a).(SqlInjectionMatchSetSqlInjectionMatchTuplesOutput)
}

type SqlInjectionMatchSetSqlInjectionMatchTuplesOutput struct { *pulumi.OutputState }

// Specifies where in a web request to look for snippets of malicious SQL code.
func (o SqlInjectionMatchSetSqlInjectionMatchTuplesOutput) FieldToMatch() SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput {
	return o.Apply(func(v SqlInjectionMatchSetSqlInjectionMatchTuples) SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch {
		return v.FieldToMatch
	}).(SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput)
}

// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
// e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
// for all supported values.
func (o SqlInjectionMatchSetSqlInjectionMatchTuplesOutput) TextTransformation() pulumi.StringOutput {
	return o.Apply(func(v SqlInjectionMatchSetSqlInjectionMatchTuples) string {
		return v.TextTransformation
	}).(pulumi.StringOutput)
}

func (SqlInjectionMatchSetSqlInjectionMatchTuplesOutput) ElementType() reflect.Type {
	return sqlInjectionMatchSetSqlInjectionMatchTuplesType
}

func (o SqlInjectionMatchSetSqlInjectionMatchTuplesOutput) ToSqlInjectionMatchSetSqlInjectionMatchTuplesOutput() SqlInjectionMatchSetSqlInjectionMatchTuplesOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTuplesOutput) ToSqlInjectionMatchSetSqlInjectionMatchTuplesOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTuplesOutput {
	return o
}

func init() { pulumi.RegisterOutputType(SqlInjectionMatchSetSqlInjectionMatchTuplesOutput{}) }

var sqlInjectionMatchSetSqlInjectionMatchTuplesArrayType = reflect.TypeOf((*[]SqlInjectionMatchSetSqlInjectionMatchTuples)(nil)).Elem()

type SqlInjectionMatchSetSqlInjectionMatchTuplesArrayInput interface {
	pulumi.Input

	ToSqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput() SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput
	ToSqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput
}

type SqlInjectionMatchSetSqlInjectionMatchTuplesArrayArgs []SqlInjectionMatchSetSqlInjectionMatchTuplesInput

func (SqlInjectionMatchSetSqlInjectionMatchTuplesArrayArgs) ElementType() reflect.Type {
	return sqlInjectionMatchSetSqlInjectionMatchTuplesArrayType
}

func (a SqlInjectionMatchSetSqlInjectionMatchTuplesArrayArgs) ToSqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput() SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput {
	return pulumi.ToOutput(a).(SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput)
}

func (a SqlInjectionMatchSetSqlInjectionMatchTuplesArrayArgs) ToSqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput)
}

type SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput struct { *pulumi.OutputState }

func (o SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput) Index(i pulumi.IntInput) SqlInjectionMatchSetSqlInjectionMatchTuplesOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) SqlInjectionMatchSetSqlInjectionMatchTuples {
		return vs[0].([]SqlInjectionMatchSetSqlInjectionMatchTuples)[vs[1].(int)]
	}).(SqlInjectionMatchSetSqlInjectionMatchTuplesOutput)
}

func (SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput) ElementType() reflect.Type {
	return sqlInjectionMatchSetSqlInjectionMatchTuplesArrayType
}

func (o SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput) ToSqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput() SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput) ToSqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput {
	return o
}

func init() { pulumi.RegisterOutputType(SqlInjectionMatchSetSqlInjectionMatchTuplesArrayOutput{}) }

type SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g. `HEADER`, `METHOD` or `BODY`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
	// for all supported values.
	Type string `pulumi:"type"`
}
var sqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchType = reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch)(nil)).Elem()

type SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchInput interface {
	pulumi.Input

	ToSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput() SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput
	ToSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput
}

type SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchArgs struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data pulumi.StringInput `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g. `HEADER`, `METHOD` or `BODY`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
	// for all supported values.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchArgs) ElementType() reflect.Type {
	return sqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchType
}

func (a SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchArgs) ToSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput() SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput {
	return pulumi.ToOutput(a).(SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput)
}

func (a SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchArgs) ToSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, a).(SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput)
}

type SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput struct { *pulumi.OutputState }

// When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
// If `type` is any other value, omit this field.
func (o SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput) Data() pulumi.StringOutput {
	return o.Apply(func(v SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch) string {
		if v.Data == nil { return *new(string) } else { return *v.Data }
	}).(pulumi.StringOutput)
}

// The part of the web request that you want AWS WAF to search for a specified string.
// e.g. `HEADER`, `METHOD` or `BODY`.
// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
// for all supported values.
func (o SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch) string {
		return v.Type
	}).(pulumi.StringOutput)
}

func (SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput) ElementType() reflect.Type {
	return sqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchType
}

func (o SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput) ToSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput() SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput) ToSqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput {
	return o
}

func init() { pulumi.RegisterOutputType(SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchOutput{}) }

