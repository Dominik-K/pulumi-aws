// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an AppSync Function.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/appsync_function.html.markdown.
type Function struct {
	pulumi.CustomResourceState

	// The ID of the associated AppSync API.
	ApiId pulumi.StringOutput `pulumi:"apiId"`

	// The ARN of the Function object.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The Function DataSource name.
	DataSource pulumi.StringOutput `pulumi:"dataSource"`

	// The Function description.
	Description pulumi.StringOutput `pulumi:"description"`

	// A unique ID representing the Function object.
	FunctionId pulumi.StringOutput `pulumi:"functionId"`

	// The version of the request mapping template. Currently the supported value is `2018-05-29`.
	FunctionVersion pulumi.StringOutput `pulumi:"functionVersion"`

	// The Function name. The function name does not have to be unique.
	Name pulumi.StringOutput `pulumi:"name"`

	// The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate pulumi.StringOutput `pulumi:"requestMappingTemplate"`

	// The Function response mapping template.
	ResponseMappingTemplate pulumi.StringOutput `pulumi:"responseMappingTemplate"`
}

// NewFunction registers a new resource with the given unique name, arguments, and options.
func NewFunction(ctx *pulumi.Context,
	name string, args *FunctionArgs, opts ...pulumi.ResourceOption) (*Function, error) {
	if args == nil || args.ApiId == nil {
		return nil, errors.New("missing required argument 'ApiId'")
	}
	if args == nil || args.DataSource == nil {
		return nil, errors.New("missing required argument 'DataSource'")
	}
	if args == nil || args.RequestMappingTemplate == nil {
		return nil, errors.New("missing required argument 'RequestMappingTemplate'")
	}
	if args == nil || args.ResponseMappingTemplate == nil {
		return nil, errors.New("missing required argument 'ResponseMappingTemplate'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ApiId; i != nil { inputs["apiId"] = i.ToStringOutput() }
		if i := args.DataSource; i != nil { inputs["dataSource"] = i.ToStringOutput() }
		if i := args.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := args.FunctionVersion; i != nil { inputs["functionVersion"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.RequestMappingTemplate; i != nil { inputs["requestMappingTemplate"] = i.ToStringOutput() }
		if i := args.ResponseMappingTemplate; i != nil { inputs["responseMappingTemplate"] = i.ToStringOutput() }
	}
	var resource Function
	err := ctx.RegisterResource("aws:appsync/function:Function", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunction gets an existing Function resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionState, opts ...pulumi.ResourceOption) (*Function, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.ApiId; i != nil { inputs["apiId"] = i.ToStringOutput() }
		if i := state.Arn; i != nil { inputs["arn"] = i.ToStringOutput() }
		if i := state.DataSource; i != nil { inputs["dataSource"] = i.ToStringOutput() }
		if i := state.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := state.FunctionId; i != nil { inputs["functionId"] = i.ToStringOutput() }
		if i := state.FunctionVersion; i != nil { inputs["functionVersion"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.RequestMappingTemplate; i != nil { inputs["requestMappingTemplate"] = i.ToStringOutput() }
		if i := state.ResponseMappingTemplate; i != nil { inputs["responseMappingTemplate"] = i.ToStringOutput() }
	}
	var resource Function
	err := ctx.ReadResource("aws:appsync/function:Function", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Function resources.
type FunctionState struct {
	// The ID of the associated AppSync API.
	ApiId pulumi.StringInput `pulumi:"apiId"`
	// The ARN of the Function object.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The Function DataSource name.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// The Function description.
	Description pulumi.StringInput `pulumi:"description"`
	// A unique ID representing the Function object.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The version of the request mapping template. Currently the supported value is `2018-05-29`.
	FunctionVersion pulumi.StringInput `pulumi:"functionVersion"`
	// The Function name. The function name does not have to be unique.
	Name pulumi.StringInput `pulumi:"name"`
	// The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate pulumi.StringInput `pulumi:"requestMappingTemplate"`
	// The Function response mapping template.
	ResponseMappingTemplate pulumi.StringInput `pulumi:"responseMappingTemplate"`
}

// The set of arguments for constructing a Function resource.
type FunctionArgs struct {
	// The ID of the associated AppSync API.
	ApiId pulumi.StringInput `pulumi:"apiId"`
	// The Function DataSource name.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// The Function description.
	Description pulumi.StringInput `pulumi:"description"`
	// The version of the request mapping template. Currently the supported value is `2018-05-29`.
	FunctionVersion pulumi.StringInput `pulumi:"functionVersion"`
	// The Function name. The function name does not have to be unique.
	Name pulumi.StringInput `pulumi:"name"`
	// The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate pulumi.StringInput `pulumi:"requestMappingTemplate"`
	// The Function response mapping template.
	ResponseMappingTemplate pulumi.StringInput `pulumi:"responseMappingTemplate"`
}
