// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Cognito User Pool Domain resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cognito_user_pool_domain.html.markdown.
type UserPoolDomain struct {
	pulumi.CustomResourceState

	// The AWS account ID for the user pool owner.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`

	// The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.
	CertificateArn pulumi.StringOutput `pulumi:"certificateArn"`

	// The ARN of the CloudFront distribution.
	CloudfrontDistributionArn pulumi.StringOutput `pulumi:"cloudfrontDistributionArn"`

	// The domain string.
	Domain pulumi.StringOutput `pulumi:"domain"`

	// The S3 bucket where the static files for this domain are stored.
	S3Bucket pulumi.StringOutput `pulumi:"s3Bucket"`

	// The user pool ID.
	UserPoolId pulumi.StringOutput `pulumi:"userPoolId"`

	// The app version.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewUserPoolDomain registers a new resource with the given unique name, arguments, and options.
func NewUserPoolDomain(ctx *pulumi.Context,
	name string, args *UserPoolDomainArgs, opts ...pulumi.ResourceOption) (*UserPoolDomain, error) {
	if args == nil || args.Domain == nil {
		return nil, errors.New("missing required argument 'Domain'")
	}
	if args == nil || args.UserPoolId == nil {
		return nil, errors.New("missing required argument 'UserPoolId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.CertificateArn; i != nil { inputs["certificateArn"] = i.ToStringOutput() }
		if i := args.Domain; i != nil { inputs["domain"] = i.ToStringOutput() }
		if i := args.UserPoolId; i != nil { inputs["userPoolId"] = i.ToStringOutput() }
	}
	var resource UserPoolDomain
	err := ctx.RegisterResource("aws:cognito/userPoolDomain:UserPoolDomain", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserPoolDomain gets an existing UserPoolDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserPoolDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserPoolDomainState, opts ...pulumi.ResourceOption) (*UserPoolDomain, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.AwsAccountId; i != nil { inputs["awsAccountId"] = i.ToStringOutput() }
		if i := state.CertificateArn; i != nil { inputs["certificateArn"] = i.ToStringOutput() }
		if i := state.CloudfrontDistributionArn; i != nil { inputs["cloudfrontDistributionArn"] = i.ToStringOutput() }
		if i := state.Domain; i != nil { inputs["domain"] = i.ToStringOutput() }
		if i := state.S3Bucket; i != nil { inputs["s3Bucket"] = i.ToStringOutput() }
		if i := state.UserPoolId; i != nil { inputs["userPoolId"] = i.ToStringOutput() }
		if i := state.Version; i != nil { inputs["version"] = i.ToStringOutput() }
	}
	var resource UserPoolDomain
	err := ctx.ReadResource("aws:cognito/userPoolDomain:UserPoolDomain", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserPoolDomain resources.
type UserPoolDomainState struct {
	// The AWS account ID for the user pool owner.
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
	// The ARN of the CloudFront distribution.
	CloudfrontDistributionArn pulumi.StringInput `pulumi:"cloudfrontDistributionArn"`
	// The domain string.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The S3 bucket where the static files for this domain are stored.
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	// The user pool ID.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
	// The app version.
	Version pulumi.StringInput `pulumi:"version"`
}

// The set of arguments for constructing a UserPoolDomain resource.
type UserPoolDomainArgs struct {
	// The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
	// The domain string.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The user pool ID.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}
