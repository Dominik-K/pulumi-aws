// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    public static partial class Invokes
    {
        /// <summary>
        /// Get information on an EC2 Transit Gateway VPN Attachment.
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/ec2_transit_gateway_vpn_attachment.html.markdown.
        /// </summary>
        [Obsolete("Use GetVpnAttachment.InvokeAsync() instead")]
        public static Task<GetVpnAttachmentResult> GetVpnAttachment(GetVpnAttachmentArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpnAttachmentResult>("aws:ec2transitgateway/getVpnAttachment:getVpnAttachment", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetVpnAttachment
    {
        /// <summary>
        /// Get information on an EC2 Transit Gateway VPN Attachment.
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/ec2_transit_gateway_vpn_attachment.html.markdown.
        /// </summary>
        public static Task<GetVpnAttachmentResult> InvokeAsync(GetVpnAttachmentArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpnAttachmentResult>("aws:ec2transitgateway/getVpnAttachment:getVpnAttachment", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetVpnAttachmentArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVpnAttachmentFiltersArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public List<Inputs.GetVpnAttachmentFiltersArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpnAttachmentFiltersArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// A mapping of tags, each pair of which must exactly match a pair on the desired Transit Gateway VPN Attachment.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        /// <summary>
        /// Identifier of the EC2 Transit Gateway.
        /// </summary>
        [Input("transitGatewayId")]
        public string? TransitGatewayId { get; set; }

        /// <summary>
        /// Identifier of the EC2 VPN Connection.
        /// </summary>
        [Input("vpnConnectionId")]
        public string? VpnConnectionId { get; set; }

        public GetVpnAttachmentArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetVpnAttachmentResult
    {
        public readonly ImmutableArray<Outputs.GetVpnAttachmentFiltersResult> Filters;
        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway VPN Attachment
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        public readonly string? TransitGatewayId;
        public readonly string? VpnConnectionId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetVpnAttachmentResult(
            ImmutableArray<Outputs.GetVpnAttachmentFiltersResult> filters,
            ImmutableDictionary<string, object> tags,
            string? transitGatewayId,
            string? vpnConnectionId,
            string id)
        {
            Filters = filters;
            Tags = tags;
            TransitGatewayId = transitGatewayId;
            VpnConnectionId = vpnConnectionId;
            Id = id;
        }
    }

    namespace Inputs
    {

    public sealed class GetVpnAttachmentFiltersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("values", required: true)]
        private List<string>? _values;

        /// <summary>
        /// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
        /// </summary>
        public List<string> Values
        {
            get => _values ?? (_values = new List<string>());
            set => _values = value;
        }

        public GetVpnAttachmentFiltersArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetVpnAttachmentFiltersResult
    {
        /// <summary>
        /// The name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetVpnAttachmentFiltersResult(
            string name,
            ImmutableArray<string> values)
        {
            Name = name;
            Values = values;
        }
    }
    }
}
