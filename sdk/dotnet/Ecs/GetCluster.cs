// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecs
{
    public static partial class Invokes
    {
        /// <summary>
        /// The ECS Cluster data source allows access to details of a specific
        /// cluster within an AWS ECS service.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/ecs_cluster.html.markdown.
        /// </summary>
        public static Task<GetClusterResult> GetCluster(GetClusterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("aws:ecs/getCluster:getCluster", args ?? InvokeArgs.Empty, options.WithVersion());
    }


    public sealed class GetClusterArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ECS Cluster
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        public GetClusterArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The ARN of the ECS Cluster
        /// </summary>
        public readonly string Arn;
        public readonly string ClusterName;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The number of pending tasks for the ECS Cluster
        /// </summary>
        public readonly int PendingTasksCount;
        /// <summary>
        /// The number of registered container instances for the ECS Cluster
        /// </summary>
        public readonly int RegisteredContainerInstancesCount;
        /// <summary>
        /// The number of running tasks for the ECS Cluster
        /// </summary>
        public readonly int RunningTasksCount;
        /// <summary>
        /// The settings associated with the ECS Cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterSettingResult> Settings;
        /// <summary>
        /// The status of the ECS Cluster
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetClusterResult(
            string arn,

            string clusterName,

            string id,

            int pendingTasksCount,

            int registeredContainerInstancesCount,

            int runningTasksCount,

            ImmutableArray<Outputs.GetClusterSettingResult> settings,

            string status)
        {
            Arn = arn;
            ClusterName = clusterName;
            Id = id;
            PendingTasksCount = pendingTasksCount;
            RegisteredContainerInstancesCount = registeredContainerInstancesCount;
            RunningTasksCount = runningTasksCount;
            Settings = settings;
            Status = status;
        }
    }
}
